<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-leon-dnsop-signaling-zone-owner-intent-00" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Signaling Zone Owner Intent">Signaling Zone Owner Intent</title>

    <author initials="L." surname="Fernandez" fullname="Leon Fernandez">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>leon.fernandez@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="E." surname="Bergström" fullname="Erik Bergström">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>erik.bergstrom@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="J." surname="Stenstam" fullname="Johan Stenstam">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>johan.stenstam@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="S." surname="Crocker" fullname="Steve Crocker">
      <organization>Edgemoor Research Institute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>steve@shinkuro.com</email>
      </address>
    </author>

    <date />

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document introduces a standardized mechanism for zone owners to
signal their intent regarding DNS provider responsibilities through
DNS itself. It defines a new DNS RRtype, HSYNC (Horizontal
Synchronization), that enables zone owners to designate which
providers are authorized to serve and/or sign their zones, control
whether providers or the zone owner manages the NS RRset, and specify
zone transfer chain configurations.</t>

<t>The HSYNC record allows DNS providers to discover each other and
establish secure communication channels, either via DNS messages
secured by SIG(0) signatures or via a RESTful API secured by TLS. This
provider-to-provider communication enables automated coordination for
tasks such as NS RRset management, zone transfers, and DNSSEC-related
operations.</t>

<t>While a distributed DNSSEC multi-signer architecture (similar to
"model 2" in RFC8901) is an important application of this framework,
the HSYNC mechanism supports broader provider synchronization
needs. The document defines two new entities to facilitate this
synchronization: the Agent responsible for inter-provider communication
and the Combiner which merges unsigned zone data from the zone owner
with managed data from providers.</t>

<t>This specification covers the provider discovery and communication
establishment aspects, while the specific synchronization algorithms
for multi-signer operation are described in
I-D.draft-ietf-dnsop-dnssec-automation.</t>

<t>TO BE REMOVED: This document is being collaborated on in Github at:
<eref target="https://github.com/johanix/draft-leon-dnsop-signaling-zone-owner-intent">https://github.com/johanix/draft-leon-dnsop-signaling-zone-owner-intent</eref>.
The most recent working version of the document, open issues, etc, should all be
available there.  The authors (gratefully) accept pull requests.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>DNS zone owners often need to work with multiple DNS providers to
serve their zones. These providers may have different
responsibilities - some may sign the zone, some may only serve it, and
some may do both. Traditionally, the configuration of these providers
and their responsibilities has been handled through manual processes
and provider-specific mechanisms.</t>

<t>This document presents a standardized mechanism for zone owners to
signal their intent regarding DNS provider responsibilities through
DNS itself. It defines a new DNS RRtype, HSYNC, that allows zone
owners to:</t>

<t><list style="symbols">
  <t>Designate which providers are authorized to serve the zone</t>
  <t>Specify whether each provider should sign the zone</t>
  <t>Control whether providers or the zone owner manages the NS RRset</t>
  <t>Specify on a provider-level how the zone transfer chain should be setup</t>
  <t>Enable providers to discover each other and establish secure communication</t>
</list></t>

<t>By publishing this information in the DNS, zone owners ensure all
providers receive consistent configuration information. This enables
automated coordination between providers for tasks like:</t>

<t><list style="symbols">
  <t>NS RRset management across multiple providers</t>
  <t>Addition or removal of providers</t>
  <t>Transition between different signing configurations</t>
  <t>Management of DNSSEC-related records when multiple signers are used</t>
  <t>Zone transfer chain configuration</t>
</list></t>

<t>Knowledge of DNS NOTIFY <xref target="RFC1996"/> and DNS Dynamic Updates
<xref target="RFC2136"/> and <xref target="RFC3007"/> is assumed. DNS SIG(0) transaction
signatures are documented in <xref target="RFC2931"/>.</t>

<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "<strong>MUST</strong>", "<strong>MUST NOT</strong>", "<strong>REQUIRED</strong>", "<strong>SHALL</strong>",
"<strong>SHALL NOT</strong>", "<strong>SHOULD</strong>", "<strong>SHOULD NOT</strong>", "<strong>RECOMMENDED</strong>",
"<strong>NOT RECOMMENDED</strong>", "<strong>MAY</strong>", and "<strong>OPTIONAL</strong>" in this document
are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<t>...</t>

</section>
<section anchor="requirements"><name>Requirements</name>

<t>The requirements for an architecture facilitating DNS provider synchronization are defined as follows:</t>

<t><list style="symbols">
  <t>Zone owners MUST be able to signal to their DNS providers information sufficient for the providers to identify each other and establish secure communication.</t>
  <t>All signaling from zone owner to DNS providers SHOULD be carried out via data in the served zone, ensuring that all providers receive the same configuration information at approximately the same time.</t>
  <t>Zone owners MUST be able to explicitly specify which DNS providers are authorized to serve and/or sign their zones.</t>
  <t>Zone owners MUST be able to signal the intent to onboard an additional DNS provider. When the additional provider is designated as a signer, this MUST automatically initiate the appropriate provider synchronization processes.</t>
  <t>Zone owners MUST be able to signal the intent to offboard an existing DNS provider. When the offboarded provider is a signer, this MUST automatically initiate the appropriate provider synchronization processes.</t>
  <t>By engaging DNS providers for signing, the zone owner MUST give up control over the following records:
  <list style="symbols">
      <t>All DNSSEC-related records in the zone</t>
      <t>Any CDS and/or CSYNC RRsets</t>
    </list></t>
  <t>It SHOULD be possible but NOT MANDATORY for the zone owner to also delegate the management of the NS RRset to the set of DNS providers.</t>
  <t>DNS providers MUST be able to discover and establish secure communication with each other based solely on the information provided by the zone owner in the DNS.</t>
  <t>The architecture SHOULD support both DNS-based and API-based communication between providers.</t>
  <t>The architecture SHOULD allow for smooth transitions between different provider configurations without service interruption.</t>
</list></t>

</section>
<section anchor="dns-provider-synchronization-scenarios"><name>DNS Provider Synchronization Scenarios</name>

<t>The HSYNC framework supports a variety of scenarios where zone owners
need to coordinate multiple DNS providers. The following scenarios
illustrate the range of use cases this mechanism enables:</t>

<section anchor="coordinated-ns-record-management"><name>Coordinated NS Record Management</name>

<t>A zone owner uses two DNS providers - one signs and serves the zone
while another only serves it. Through HSYNC records, the zone owner
signals to both providers who is authorized to do what. The providers'
Agents establish secure communication channels, allowing them to
coordinate NS RRset management across all authoritative nameservers
without manual intervention. The zone owner can decide whether to
retain control of NS records or delegate this responsibility to the
providers.</t>

</section>
<section anchor="multi-provider-dnssec-redundancy"><name>Multi-Provider DNSSEC Redundancy</name>

<t>A zone owner needs to eliminate the single point of failure in their
DNSSEC setup. By contracting with multiple "multi-signer capable" DNS
providers and using appropriate HSYNC records, each provider can:</t>

<t><list style="symbols">
  <t>Receive the unsigned zone via zone transfer</t>
  <t>Discover other authorized providers via HSYNC records and establish
secure communications</t>
  <t>Coordinate DNSKEY, CDS, CSYNC and NS RRset management</t>
  <t>Sign the zone using its own DNSKEYs while publishing a DNSKEY RRset
that includes keys from all authorized signers</t>
  <t>Distribute the signed zone to its authoritative nameservers and
possibly to non-signing downstream providers</t>
</list></t>

<t>This creates a fully redundant DNSSEC infrastructure with no single point of failure.</t>

</section>
<section anchor="provider-transition-management"><name>Provider Transition Management</name>

<t>A zone owner wishes to replace their current DNSSEC-signing provider
with a new one. Using HSYNC records, they can:</t>

<t><list style="symbols">
  <t>Add a new HSYNC record with State="ON" for the incoming provider, initiating the onboarding process</t>
  <t>Allow the automated synchronization between providers to handle key exchange and transition</t>
  <t>Once the new provider is fully operational, change the HSYNC State for the outgoing provider to "OFF"</t>
  <t>The providers then automatically coordinate the safe removal of the outgoing provider's keys</t>
</list></t>

<t>This entire process maintains continuous service and valid signatures while transitioning between providers.</t>

</section>
<section anchor="delegated-ns-management"><name>Delegated NS Management</name>

<t>A zone owner wants DNS providers to handle NS RRset management while retaining control of other zone data. By setting the NSMgmt field to "AGENT" in the HSYNC records, the zone owner explicitly delegates NS management responsibility to the providers. The providers' Agents then coordinate to maintain a consistent NS RRset across all authoritative servers, adding or removing nameservers as needed based on the current set of authorized providers.</t>

</section>
<section anchor="phased-migration-to-multi-provider-architecture"><name>Phased Migration to Multi-Provider Architecture</name>

<t>A zone owner currently using a single provider wants to implement a more robust architecture but prefers a gradual transition. They can:</t>

<t><list style="symbols">
  <t>First add a single HSYNC record designating their current provider, making no immediate operational changes</t>
  <t>Later add a second HSYNC record to designate an additional provider</t>
  <t>Allow the providers to automatically coordinate the transition</t>
  <t>Optionally delegate NS management to the providers by changing NSMgmt from "OWNER" to "AGENT"</t>
</list></t>

<t>This approach enables a controlled, phased migration to a more resilient multi-provider architecture.</t>

</section>
</section>
<section anchor="the-distributed-multi-signer-model"><name>The Distributed Multi-Signer Model</name>

<t>The primary difference between monolithic and distributed multi-signer
is that the former has a central "controller" while the latter
doesn't. But there is still an absolute need for synchronization
between the different participants in the distributed multi-signer
setup.</t>

<t>There are three immediate aspects for the design of a distributed
multi-signer architecture:</t>

<t><list style="symbols">
  <t>The first is "transport": how to communicate between the
individual instances in a multi-signer system.</t>
  <t>The second is "synchronization": who decides what changes are
needed where.</t>
  <t>The third is source of truth for different types of zone data. The
zone owner is the source of truth for all unsigned zone data,
except DNSSEC data. The signer is the source of truth for all
DNSSEC data in the zone. Traditionally, the source of truth for the
NS RRset is the zone owner, but with multiple DNS Providers having
the option of moving that responsibility to the DNS Providers would
be an important improvement.</t>
</list></t>

<section anchor="the-agent-integrated-signer-vs-separate-agent-johani-omskriven-20250228"><name>The Agent: Integrated Signer vs Separate Agent (johani: omskriven 20250228)</name>

<t>In a distributed setup there must be a service located with each
DNS Provider that manages communication with other DNS
Providers. This is referred to as the Agent.</t>

<t>It is possible to implement support for the synchronization and
communication needs directly into each "Signer" (i.e. typically an
authoritative nameserver with the ability to do online DNSSEC
signing). In this case the Signer implements the Agent functionality.</t>

<t>However, it is also possible to separate the synchronization and
communication needs into a separate agent. This Agent sits next to the
Signer, and is under the same administrative control (the "DNS
Provider"), but is a separate piece of software. When using this
design each Signer has an Agent attached next to it. Each Agent is
configured as a "secondary nameserver" to a Signer and receives the
(signed) zone from this Signer.</t>

<t>The "separate Agent" design has the major advantage of leaving the
Signer entirely out of the synchronization and communication complexity. The
requirements are only that the Signer treats the Agent as a normal
secondary (sends NOTIFY messages and responds to zone transfer
requests) and that the Agent has a mechanism that allows it to make
changes to zones upstream of the Signer to satisfy the synchronization
requirements for certain RRsets in the apex of the zone.</t>

<t>In this document the design using a separate Agent is used, while
pointing out that it is possible to integrate this into a future
"Signer" that implements both DNSSEC signing and the Agent
functionality.</t>

</section>
<section anchor="source-of-truth-johani-omskriven-20250228"><name>Source of Truth (johani: omskriven 20250228)</name>

<t>A common design for DNSSEC signing (regardless of multi-signer) is to
use a separate, bump-on-the-wire Signer. This is a Signer that
receives the unsigned zone via an incoming zone transfer, signs the
zone, and publishes the signed zone via an outbound zone transfer. In
such a design the source of truth has been split up between the "zone
owner" (source of truth for all non-DNSSEC zone data), and the Signer
(source of truth for all DNSSEC data in the zone).</t>

<t>In the proposed architecture the source of truth is further split up
into three participants:</t>

<t><list style="symbols">
  <t>The zone owner is the source of truth for all unsigned zone data,
except DNSSEC data and possibly the NS RRset.</t>
  <t>The Signer is the source of truth for all data generated via DNSSEC
signing: own DNSKEYs, NSEC/NSEC3 RRs, RRSIGs, etc.</t>
  <t>The Agent is the source of truth for the RRsets that must be kept in
sync across all the Signers for the zone. This includes the DNSKEYs
from other Signers, CDS and CSYNC RRsets. Possibly also the NS RRset.</t>
</list></t>

<t>The NS RRset is an interesting special case. Traditionally the NS
RRset is maintained by the zone owner, but based on data from the DNS
providers (as authoritative nameservers is a primary service for the
DNS provider). However, in the proposed architecture the
NS RRset should preferably be maintained by the Agents. For this reason
the proposed design makes control of the NS RRset explicit and the
responsibility of the zone owner to choose whether to retain control
or delegate to the Agents. Hence:</t>

<t><list style="symbols">
  <t>The Agent is the source of truth for the NS RRset, subject to the
policy of the zone owner, as described in the HSYNC RRset.</t>
</list></t>

<t>Making the control of the NS RRset explicit is useful regardless of
whether a zone uses multiple signers or single signer, as this makes
the zone owner intent explicit.</t>

<t>To be able to keep the Signer as simple as possible, the changes to the
NS, DNSKEY, CDS and CSYNC RRsets must be introduced into the unsigned
zone before the zone reaches the Signer. Likewise, to keep the zone
owner as simple as possible (i.e. not involved in the details of the
multi-signer automation) these changes must be introduced into the
unsigned zone after the zone leaves the zone owner.</t>

<section anchor="the-combiner-johani-omskriven-20250228"><name>The Combiner (johani: omskriven 20250228)</name>

<t>The consequence of these requirements is that the DNSKEY, CDS and
CSYNC RRsets (and possibly the NS RRset) are maintained via a separate
piece of software inserted between the zone owner and the Signer. This
is referred to as the Combiner.</t>

<t>The Combiner has the following features:</t>

<t><list style="symbols">
  <t>It supports inbound zone transfer of the unsigned zone from the
zone owner.</t>
  <t>It receives updates for the NS, DNSKEY, CDS and CSYNC
RRsets from the Agent. Typically the mechanism used is DNS UPDATE
with a TSIG signature, as this is easy to configure in a local
context. However, other mechanisms, including APIs, are possible.</t>
  <t>It stores all data received from the Agent separate from
the zone data received from the zone owner.</t>
  <t>Whenever it receives a new unsigned zone from the zone owner it
COMBINES zone data from the zone owner (the majority of the zone)
with specific zone data under control of the Agent: three specific
RRsets, all in the apex of the zone: the DNSKEY,CDS and CSYNC
RRsets.</t>
  <t>It is policy free (apart from being limited to the four specified
RRsets). I.e. the Combiner is not making any judgement
about what data to include in the zone from the four defined
RRsets.  That judgement is the role of the Agent.</t>
  <t>It does not sign the zone.</t>
  <t>It provides outbound zone transfer of the combined zone to the
Signer.</t>
</list></t>

<t>Example setup with two signers showing the logical flow of zone data
between the zone owner, the Combiner, the Signer and the Agent:</t>

<figure><artwork><![CDATA[
                            +--------------+
                            |     owner    |
               xfr          +-+---------+--+    xfr
            /----------------/           \----------------------\
           /                                                     \
    +-----+----+    DNS  +-------+ DNS/API +-------+  DNS    +----+-----+
    | combiner +<--------+ agent +---------+ agent +-------->+ combiner |
    +-----+----+  UPDATE +--+----+         +--+----+ UPDATE  +----+-----+
          |                 ^                 ^                 |
          v xfr             |                 |                 v xfr
    +-----+----+     xfr    |                 |   xfr      +----+-----+
    |  signer  +------------+                 +------------+  signer  |
    +-----+----+                                           +----+-----+
          |                                                     |
          v                                                     v
       +--+--+                                               +--+--+
       | NS  |--+                                            | NS  |+
       +-----+  |--+                                         +-----+|-+
          +-----+  |                                            +---+ |
             +-----+                                              +---+
]]></artwork></figure>

</section>
</section>
<section anchor="the-dns-provider-johani-omskriven-20250228"><name>The DNS Provider (johani: omskriven 20250228)</name>

<t>A "DNS Provider" is a term that is most commonly used to refer to an
entity that provides authoritative DNS service to one or more zone
owners. In the context of this document it is used to refer to an
entity that provides some subset of the following services:</t>

<t><list style="symbols">
  <t>Signing a zone received from the zone owner.</t>
  <t>Serving the zone via a set of authoritative nameservers.</t>
  <t>Distributing the signed zone to other downstream DNS Providers.</t>
</list></t>

<t>In addition to the above services a DNS Provider MUST also provide:</t>

<t><list style="symbols">
  <t>An Agent for synchronization with other DNS Providers</t>
  <t>A Combiner for the management of changes to the zone via
the synchronization among Agents (if it provides a signer)</t>
</list></t>

<t>I.e. in the setup above there are two DNS Providers, both of which are
"complete" in the sense that they provide all three of the above
services.</t>

</section>
</section>
<section anchor="identifying-the-designated-signers-johani-omskriven-20250228"><name>Identifying the Designated Signers (johani: omskriven 20250228)</name>

<t>It is the responsibility of the zone owner to choose a set of "DNS
Providers", either internal or external to the zone owners
organization. These DNS Providers MUST be clearly and uniquely
designated via publication in the HSYNC RRset, located at the apex of
the zone and consisting of one HSYNC record for each signer.</t>

<t>The HSYNC RRset MUST be added, by the zone owner, to the, typically
unsigned, zone that the zone owner maintains so that this RRset is
visible to the downstream DNS Providers and their multi-signer agents.</t>

</section>
<section anchor="the-hsync-rrset-johani-omskriven-20250228"><name>The HSYNC RRset (johani: omskriven 20250228)</name>

<t>The HSYNC RR has the zone name that publishes the HSYNC RRset as the
owner name (i.e. the HSYNC RRset must be located at the apex of the
zone). The RDATA consists of five fields "State","NSMgmt", "Sign" and
"Identity" and "Upstream":</t>

<t>zone.example.    IN HSYNC  State  NSMgmt  Sign  Identity  Upstream</t>

<t>State:
    Unsigned 8-bit. Defined values are 1=ON and 2=OFF. The value 0
    is an error.  Values 3-127 are presently undefined. Values 128-255
    are reserved for private use. The presentation format allows
    either as integers (1 or 2) or as tokens ("ON" or "OFF").</t>

<t>NSMgmt:
    Unsigned 8-bit. Defined values are 1=Zone owner and 2=Agent. The
    value 0 is an error. Values 3-255 are presently undefined (and not
    expected to be defined). The presentation format allows either as
    integers (1 or 2) or as tokens ("OWNER" or "AGENT").</t>

<t>Sign:
    Unsigned 8-bit. Defined values are 1=YES and 2=NO. The value 0 is an
    error. If Sign=YES for a particular HSYNC record, then the signer
    associated with that Identity is a designated signer for the zone.</t>

<t>Identity:
    Domain name. Used to uniquely identify the Agent for the DNS Provider
    that the Agent represents.</t>

<t>Upstream:
    Domain name. Used to uniquely identify the upstream DNS Provider
    that this DNS Provider is a downstream of. The special case of "."
    is used to signal that this DNS Provider either has no upstream
    (is the zone owner), or that the upstream is configured manually.</t>

<t>Example:</t>

<t>zone.example.   IN HSYNC  ON  AGENT  SIGN  agent.provider.example. upstream.</t>

<section anchor="semantics-of-the-hsync-state-field-johani-omskriven-20250228"><name>Semantics of the HSYNC State Field (johani: omskriven 20250228)</name>

<t>The HSYNC State field is used to signal to all Agents what the status of
each DNS Provider is from the point-of-view of the zone owner. The two
possible values are "ON" and "OFF" where "ON" means that the DNS Provider
is a currently a designated DNS Provider for the zone and "OFF" means that the
DNS Provider is previously a designated DNS Provider for the zone that is in
the process of being offboarded.</t>

<t>The reason for the "OFF" state is that the offboarding process
involves the remaining DNS Providers (hence the signalling) and it is
important to know which DNS Provider is being offboarded so that the
correct data may be removed in the correct order during the multi-signer
"remove signer" process (see <xref target="RFC8901"/>).</t>

<t>Once the offboarding process is complete the HSYNC RR for the
offboarded DNS Provider may be removed from the zone at the zone owners
discretion.</t>

</section>
<section anchor="semantics-of-the-hsync-nsmgmt-field-johani-omskriven-20250228"><name>Semantics of the HSYNC NSMgmt Field (johani: omskriven 20250228)</name>

<t>The NSMgmt field is used to signal to the Agents who is responsible for
the contents of the NS RRset for the zone. The two possible values are
"OWNER" and "AGENT".</t>

<t>The value "OWNER" signals that the zone owner is responsible for the NS
RRset and is responsible for updating the NS RRset (either with or
without the unified data from all Agents). In this case the Agents MUST NOT
instruct the Combiner to update the NS RRset.</t>

<t>The value "AGENT" means that the Agents representing DNS Providers that
sign the zone are responsible for the contents of the NS RRset. In
this case the these Agents MUST instruct the local Combiner to update the NS
RRset with the unified NS RRset data from all Agents.</t>

<section anchor="limitation-of-scope-for-ns-management-johani-omskriven-20250228"><name>Limitation of Scope for NS Management (johani: omskriven 20250228)</name>

<t>For the purpose of this document the NSMgmt Field only covers the NS
RRset. I.e. it does not include the address records of in-bailiwick
authoritative nameservers. The reasons are:</t>

<t><list style="symbols">
  <t>Limiting the possibility of DNS Providers "polluting" the name space
of the zone.</t>
  <t>Keeping the specification simpler, as the concept of "delegated" NS
management is new.</t>
</list></t>

<t>It is possible to make an argument for delegating management of
address records for in-bailiwick authoritative nameservers, but this
document does not.</t>

</section>
</section>
<section anchor="semantics-of-the-hsync-sign-field"><name>Semantics of the HSYNC Sign Field</name>

<t>The Sign field is used to signal to all Agents whether the zone owner
requests that the DNS Provider that the Agent represents should sign the
zone or not. The two possible values are "SIGN" and "NOSIGN" where "SIGN"
means that the Agent represents a currently designated DNS Provider for the
zone and "NOSIGN" means that the Agent does not.</t>

<t>When Sign=NOSIGN the Agent MUST still participate in the communication
between Agents for the zone, but MUST NOT instruct the Combiner to
update the NS RRset.</t>

<t>XXX: johani: unless the zone is unsigned?</t>

</section>
</section>
<section anchor="communication-between-agents"><name>Communication Between Agents</name>

<t>For the communication between Agents there are two choices that need to
be made among the designated Agents for a zone. The first is what
"transport" to use for the communication. The second is what
"synchronization" model to use when executing future multi-signer
processes.</t>

<t>The two defined transport alternatives are:</t>

<t><list style="symbols">
  <t>DNS-based communication (mandatory to support)</t>
  <t>REST API-based communication</t>
</list></t>

<t>Each has pros and cons and at this point in time it is not clear that
one always is better than the other. To simplify the choice of
transport DNS-based communication is mandatory to support and the REST
API-based communication may only be used if all Agents support
it. Supported transports are signaled in the Provider-Synchronization
EDNS(0) Option (see section NNN below).</t>

<t>The two defined synchronization alternatives are:</t>

<t><list style="symbols">
  <t>Leader/Follower synchronization (mandatory to support)</t>
  <t>Peer-to-Peer synchronization</t>
</list></t>

<t>Just as for transport, supported synchronization models are signaled
in the Provider-Synchronization EDNS(0) Option (see section NNN below).</t>

<t>Regardless of the synchronization model and communication method used,
the Agents SHOULD exchange all needed information about the zone and the
DNS Provider they represent to enable the multi-signer processes to
execute correctly. This includes notifications about changes to
DNSKEYs, changes to the NS RRset, etc. Depending on synchronization
model it may also include instructions for changes to the zone.</t>

<section anchor="agent-communication-via-dns-johani-omskriven-20250228"><name>Agent Communication via DNS (johani: omskriven 20250228)</name>

<t>This transport alternative is based on the observation that all the
communication needs between Agents can be expressed via DNS
messages. Notifications are sent as DNS NOTIFY messages. Requests for
changes to a zone are sent as DNS UPDATE messages, etc. The sole
remaining communication requirement is for how to communicate
information about the current state between Agents in an ongoing
multi-signer process. For this reason a dedicated EDNS(0) opcode
specifically for multi-signer synchronization is proposed.</t>

<t>This model is based on <xref target="I-D.draft-berra-dnsop-keystate"/> that solves
a similar problem for delegation synchronization between child and
parent, which has already been implemented and shown to work.</t>

</section>
<section anchor="agent-communication-via-rest-api-johani-omskriven-20250228"><name>Agent Communication via REST API (johani: omskriven 20250228)</name>

<t>REST APIs are well-known and a natural fit for many distributed
systems. The challenge is mostly in the initial setup of secure
communication. The certificates need to be validated, preferably
without a requirement on trusting a third party CA. The API endpoints
for each Agent need to be located. Once secure communication has been
established, using a REST API for Agent communication is
straight-forward.</t>

</section>
<section anchor="locating-remote-agents-johani-omskriven-20250228"><name>Locating Remote Agents (johani: omskriven 20250228)</name>

<t>When an Agent receives a zone via zone transfer from the Signer it will
analyze the zone to see whether it contains an HSYNC RRset. If there
is no HSYNC RRset the zone MUST be ignored by the Agent from the
point-of-view of provider synchronization.</t>

<t>If, however, the zone does contain an HSYNC RRset then the Agent must
analyze this RRset to identify the other Agents for the zone via their
target names in each HSYNC record. If any of the other Agents listed in
the HSYNC RRset is previously unknown to this Agent then secure
communication with this other Agent MUST be established.</t>

<t>Secure communication can be achieved via various transports and it is
up to the Agents in the zone's HSYNC records to determine amongst
themselves. This document proposes two transports: "DNS" and
"API". "DNS" is designated as as a baseline that Agents MUST support to
be compliant.</t>

<t>The following two subsections describe the mechanism by which an Agent
SHOULD locate a remote Agent and establish secure DNS-based and
API-based communications, respectively.</t>

<section anchor="locating-a-remote-dns-method-agent-johani-omskriven-20250228"><name>Locating a Remote DNS-Method Agent (johani: omskriven 20250228)</name>

<t>Locating a remote Agent using the DNS mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate a URI record for the DNS protocol for
the HSYNC identity. This provides the domain name and port to
which DNS messages should be sent.</t>
  <t>Lookup and DNSSEC-validate the SVCB record of the URI record target
to get the IP addresses to use for communication with the remote
Agent. If the returned SVCB record includes a "port=NNN" hint then
this MUST be ignored. I.e. the port to use is defined by the URI
record.</t>
  <t>Lookup and DNSSEC-validate the KEY record of the URI record target
name.  This enables verification of the SIG(0) public key of the
remote Agent once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote Agent:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  SIGN  agent.provider.com. agent.zone.example.</t>

<t>The local Agent will look up the URI record for agent.provider.com:</t>

<t>_dns._tcp.agent.provider.com.  IN  URI  10 10 "dns://ns.provider.com:5399/"
_dns._tcp.agent.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for ns.provider.com. SVCB to get the IPv4
and IPv6 addresses as ipv4hints and ipv6hints in the response to the
SVCB query:</t>

<t>ns.provider.com.   IN  SVCB  1 ipv4hint=5.6.7.8 ipv6hint=2001::53
ns.provider.com.   IN  RRSIG SVCB …</t>

<t>and also a look up for the KEY record for ns.provider.com, which
may look like this:</t>

<t>ns.provider.com.  IN  KEY …
ns.provider.com.  IN  RRSIG KEY …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local Agent is able to initiate communication with
the remote Agent and verify the identity of the responding party via the
validated KEY record for the remote Agents SIG(0) public key.</t>

</section>
<section anchor="locating-a-remote-api-method-agent-johani-omskriven-20250228"><name>Locating a Remote API-Method Agent (johani: omskriven 20250228)</name>

<t>Locating a remote Agent using the API mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate the URI record for for the HTTPS protocol
for the HSYNC identity. This provides the base URL that will be used
to construct the individual API endpoints for the REST API. It also
provides the port to use.</t>
  <t>Lookup and DNSSEC-validate the SVCB record for the URI record
target.  This provides the IP-addresses to use for communication
with the Agent. If the returned SVCB record includes a "port=NNN" hint
then this MUST be ignored. I.e. the port to use is defined by the
URI record.</t>
  <t>Lookup and DNSSEC-validate the TLSA record for the port and protocol
specified in the URI record. This will enable verification of the
certificate of the remote Agent once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote Agent:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  agent.provider.com. agent.zone.example.</t>

<t>the local Agent will look up the URI record for agent.provider.com:</t>

<t>_https._tcp.agent.provider.com.  IN  URI  10 10 “https://api.provider.com:443/api/v2/”
_https._tcp.agent.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for api.provider.com IPv4 and IPv6
addresses as hints in an SVCB RR:</t>

<t>api.provider.com.   IN  SVCB 1 ipv4hint=1.2.3.4 ipv6hint=2001::bad:cafe:443
api.provider.com.   IN  RRSIG SVCB …</t>

<t>Now we know the IP-address and the port as well as the base URL to
use. Finally the TLSA record for _443._tcp.api.provider.com is
looked up, with a response that may look like this:</t>

<t>_443._tcp.api.provider.com.  IN  TLSA 3 1 1 ….
  _443._tcp.api.provider.com.  IN  RRSIG TLSA …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local Agent is able to initiate communication with
the remote Agent and verify the identity of the responding party via the
TLSA record for the remote Agents certificate.</t>

<section anchor="fallback-to-dns-based-communication-johani-omskriven-20250228"><name>Fallback to DNS-based Communication (johani: omskriven 20250228)</name>

<t>If the API-based communication fails, either because needed DNS
records are missing, the TLSA record fails to validate the remote Agents
certificate or the remote Agent simply doesn't respond, the local Agent
MUST fall back to DNS-based communication.</t>

</section>
</section>
</section>
<section anchor="the-initial-hello-phase-johani-omskriven-20250228"><name>The Initial HELLO Phase (johani: omskriven 20250228)</name>

<t>When two Agents need to communicate with each other for the first time
(because they are both deisgnated signers for the same zone), they
need to establish secure communication. This is done in a "HELLO"
phase where the Agents exchange information about their capabilities.</t>

<t>If all the information needed for API-based transport for the remote
party was available, the Agent SHOULD attempt an API-based HELLO. If,
however, this fails for some reason, it should fall back to DNS-based
HELLO.</t>

<section anchor="dns-based-hello-phase-johani-omskriven-20250228"><name>DNS-based HELLO Phase (johani: omskriven 20250228)</name>

<t>When using DNS-based communication the HELLO phase is done by sending
a NOTIFY(SOA) for the zone that triggered the need for
communication. The NOTIFY message MUST contain a Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>In the Provider-Synchronization EDNS(0) Option the OPERATION field
MUST have the value "HELLO" (1). Furthermore, the Agent signals its
transport and synchronization capabilities in the TRANSPORT and
SYNCHRONIZATION fields. This message is signed with the SIG(0) key for
the local Agent for which the public key is published as a KEY record
for the Agent.</t>

<t>In the response to the NOTIFY, the remote Agent does the same and the
two Agents can now verify each other's identity and are also aware of
the other Agents transport and synchronization capabilities.</t>

</section>
<section anchor="api-based-hello-phase-johani-jobbigt"><name>API-based HELLO Phase (johani: jobbigt)</name>

<t>When using API-based communication the HELLO phase is done by sending
a REST API POST request to the remote Agent at the "/hello"
endpoint. The request MUST contain a JSON encoded object with the
following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the local Agent.</t>
  <t>"synchronization": The synchronization capabilities of the local Agent.</t>
</list></t>

<t>The response MUST contain a JSON object with the following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the remote Agent.</t>
  <t>"synchronization": The synchronization capabilities of the remote Agent.</t>
</list></t>

</section>
<section anchor="interpretation-of-the-hello-responses-johani-omskriven-20250228"><name>Interpretation of the HELLO Responses (johani: omskriven 20250228)</name>

<t>Once an Agent has received HELLO responses from all other Agents that are
designated signers for the zone, it knows the capabilities of the Agents
as a group. It can then use this information to determine which
transport to use:</t>

<t><list style="symbols">
  <t>If all Agents support API-based communication, the Agents will use
API-based communication for this zone.</t>
  <t>If one or more Agents only support DNS-based communication, the Agents
will use DNS-based communication for this zone.</t>
</list></t>

<t>Likewise, each Agent now knows the synchronization capabilities of the
other Agents and can determine which synchronization model to use:</t>

<t><list style="symbols">
  <t>If all Agents support the Peer-to-Peer synchronization model, the Agents
will use the Peer-to-Peer synchronization model for this zone.</t>
  <t>If one or more Agents only support the Leader/Follower synchronization
model, the Agents will use the Leader/Follower synchronization model
for this zone.</t>
</list></t>

</section>
</section>
<section anchor="provider-synchronization-edns0-option-format-johani-omskriven-20250228"><name>Provider-Synchronization EDNS(0) Option Format (johani: omskriven 20250228)</name>

<t>This document uses an Extended Mechanism for DNS (EDNS0) <xref target="RFC6891"/>
option to include DNS Provider synchronization information in DNS
messages.</t>

<t>This option is structured the same way as the KeyState option
described in <xref target="I-D.draft-berra-dnsop-keystate"/>, which has been
implemented and shown to work for a similar use case. The requirements
for DNS Provider synchronization are sufficiently different that it is
not possible to re-use the KeyState OPT also for this purpose and
therefore a new EDNS(0) option is defined here.</t>

<t>The Provider-Synchronization EDNS(0) option is structured as follows:</t>

<figure><artwork><![CDATA[
                                               1   1   1   1   1   1
       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 0:  |                            OPTION-CODE                        |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 2:  |                           OPTION-LENGTH                       |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 4:  |           OPERATION           |           TRANSPORT           |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 8:  |        SYNCHRONIZATION        |                               /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 10: / OPERATION-BODY                                                /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>Field definition details:</t>

<t>OPTION-CODE:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains the value TBD
    for Multi-Signer.</t>

<t>OPTION-LENGTH:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains
    the length of the payload (everything after OPTION-LENGTH) in
    octets and should be 4 plus the length of the OPERATION-BODY field
    (which may be zero octets long).</t>

<t>OPERATION:
    8 bits. Signals the type of operation the message
    performs. This document defines the two operations HELLO and
    HEARTBEAT. For a complete distributed multi-signer specification a
    number of additional operations will need to be allocated to be
    able to describe the states in the different multi-signer
    processes. This allocation must be done either in a revision to
    this document or in a subsequent document.</t>

<t>TRANSPORT:
    8 bits. Encodes the transport capabilities of the Agent. With
    8 bits it is possible to define up to 8 different transports of
    which this document defines two: DNS and API.</t>

<t>MULTI-SIGNER SYNC:
    8 bits. Only used for the case of multi-signer synchronization.
    Encodes the multi-signer synchronization capabilities of the Agent.
    With 8 bits it is possible to define up to 8 different
    synchronization models of which this document identifies two:
    Leader/Follower and Peer-to-Peer.</t>

<t>OPERATION-BODY:
    Variable-length. Used to carry operation-specific parameters.</t>

<section anchor="encoding-transport-capabilities-in-the-provider-synchronization-edns0-option"><name>Encoding Transport Capabilities in the Provider-Synchronization EDNS(0) Option</name>

<t>An Agent signals the union of its transport capabilities by setting the
corresponding bits to 1.</t>

<t>0: DNS transport supported (baseline, MUST be supported by all Agents)</t>

<t>1: API transport supported</t>

<t>2-7: unused</t>

</section>
<section anchor="encoding-multi-signer-synchronization-capabilities-in-the-provider-synchronization-edns0-option"><name>Encoding Multi-signer Synchronization Capabilities in the Provider-Synchronization EDNS(0) Option</name>

<t>In a multi-signer context, an Agent signals its multi-signer 
synchronization capabilities by setting the corresponding bits to 1.</t>

<t>0: Leader/Follower multi-signer synchronization supported</t>

<t>1: Peer-to-Peer multi-signer synchronization supported</t>

<t>2-7: unused</t>

<t>Detailed specification of the Multi-signer Sync field is out of scope for this document.</t>

</section>
</section>
</section>
<section anchor="sequence-diagram-example-of-establishing-secure-comms-the-hello-phase"><name>Sequence Diagram Example of Establishing Secure Comms - "The Hello Phase"</name>

<t>The procedure of locating another Agent and establishing a secure
communication, referred to as "The Hello Phase" is examplified in the
sequence diagram below.</t>

<t>The procedure is as follows:</t>

<t><list style="numbers">
  <t>The Agents receive a zone via zone transfer. By
analyzing the HSYNC RRset each Agent become aware of the identities
of the other Agents for the zone. I.e. each Agent knows which other
Agents it needs to communicate with.  Communication with each of
these, previously unknown, remote Agents is referred to as "NEEDED".</t>
  <t>Each Agent starts aquiring the information needed to establish secure
communications with any previously unknown Agents. Here we only
illustrate the baseline case where DNS-based communications is to
be used in the following phase. Once all needed information has
been collected the communication with this remote Agent is considered
to be "KNOWN".</t>
  <t>Once an Agent has received the required information (URI, SVCB and
KEY records in the baseline case) it sends a NOTIFY message with a
dedicated Provider-Synchronization OPT code with OPERATION="HELLO".
The sender uses this OPT field to signal its transport and synchronization
capabilities. Similarly, the responder signals its capabilities
using the same field.</t>
  <t>When an Agent either gets a NOERROR response to its NOTIFY OPT(hello)
message or responds with a NOERROR, it transitions out of "The
Hello Phase" with the exchanging party and they transition to the
next phaste where they start sending NOTIFY OPT(heartbeat) signals
instead. The communication with the remote Agent is now considered to
be in the "OPERATIONAL" state.</t>
</list></t>

<t>In the case where one Agent is aware of the need to communicate with
another Agent, but the other is not (eg. the zone transfer was delayed
for one of them), the slower one SHOULD respond with a RCODE=REFUSED
to any NOTIFY OPT(hello) it receives. Once it is ready, it will send
its own NOTIFY OPT(hello) which should be responded to with a
RCODE=NOERROR.</t>

<figure><artwork><![CDATA[
+----------+                 +----------+                        +----------+
|  Owner   |                 | Agent A  |                        | Agent B  |
+----------+                 +----------+                        +----------+
     |                            |                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |--------------------------->|                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |---------------------------------------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  QUERY _dns._tcp.agent-b.se. URI?  |
     |                            |----------------------------------->|
     |                            |  QUERY ns.agent-b.se. SVCB?        |
     |                            |----------------------------------->|
     |                            |  QUERY ns.agent-b.se. KEY?         |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(hello)     |
     |                            |----------------------------------->|
     |                            |  NOERROR sign-me.se. OPT(hello)    |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |                                    |

]]></artwork></figure>

</section>
<section anchor="responsibilities-of-an-agent"><name>Responsibilities of an Agent</name>

<t>Each Agent has certain responsibilites, depending on supported
transports methods.</t>

<section anchor="enabling-remote-agents-to-locate-this-agent"><name>Enabling Remote Agents to Locate This Agent</name>

<t>For a group of Agents to be able to communicate securely and synchronize
data for a zone, each Agent must ensure that the DNS records needed for
secure communication with other Agents are published:</t>

<t><list style="symbols">
  <t>URI, SVCB and KEY records required for DNS-based communication
secured by SIG(0).</t>
  <t>URI, SVCB and TLSA records required for API-based communication
secured by TLS (if supported).</t>
  <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the identity of the Agent.</t>
</list></t>

</section>
<section anchor="enabling-remote-agents-to-lookup-zone-data-added-by-this-agent"><name>Enabling Remote Agents to Lookup Zone Data Added By This Agent</name>

<t>When using DNS transport between Agents, four types of information is
needed to be conveyed from one party to another:</t>

<t><list style="numbers">
  <t>Notifications (sent as DNS NOTIFY).</t>
  <t>Retrieval of existing data (looked up via DNS QUERY).</t>
  <t>Changes to existing data (sent as DNS UPDATE).</t>
</list></t>

<t>In addition there is also a need for the Agents to signal state information
to each other. One obvious case of this is in the multi-signer context, where
the Agents need to signal the state of an ongoing multi-signer process to each other:</t>

<t><list style="numbers">
  <t>Multi-signer "state" information (sent via the Provider-Synchronization EDNS(0)
OPT).</t>
</list></t>

<t>The second case, i.e. looking up data for a zone that is particular to
a specific DNS Provider is typically about the DNSKEY RRs added by
that signer or the NS RRs representing the authoritative nameservers
for that DNS Provider. This is looked up under domain names
constructed from the name of the served zone and the identity of the
DNS Provider.</t>

<t>For each zone that is managed, the Agent must ensure that the data
needed for synchronization with other Agents is published:</t>

<t><list style="symbols">
  <t>The DNSKEY RRset for the zone consisting of the DNSKEYs that the
local Signer for this DNS Provider uses to sign the zone.</t>
  <t>The CDS RRset for the zone, representing the KSK that the local
Signer uses to sign the zone (when needed).</t>
  <t>The NS RRs for the zone, consisting of the NS records of the
authoritative nameservers that this DNS Provider is responsible
for.</t>
  <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the concatenation of the zone name and the
identity of the Agent. Example for the zone "zone.example" and the
Agent "agent.provider":</t>
</list></t>

<t>zone.example.agent.provider. IN DNSKEY ...
zone.example.agent.provider. IN RRSIG DNSKEY ...
zone.example.agent.provider. IN NS ...
zone.example.agent.provider. IN RRSIG NS ...</t>

</section>
</section>
<section anchor="migration-from-single-signer-to-multi-signer"><name>Migration from Single-Signer to Multi-Signer</name>

<t>The migration from a single-signer to a multi-signer architecture is
done by changing from only having a single designated signer in the
HSYNC RRset to having multiple designated signers (i.e. the SIGN field
changed from "NOSIGN" to "SIGN"). This may be done in several steps.</t>

<section anchor="adding-a-single-hsync-record-to-an-already-signed-zone"><name>Adding a single HSYNC record to an already signed zone</name>

<t>Adding a single HSYNC record to a zone that is already signed by the
DNS provider "provider.com" with NSMGMT=OWNER is a no-op that does not
change anything:</t>

<t>zone.example. IN HSYNC  ON  OWNER  SIGN  agent.provider.com. upstream.</t>

<t>The zone was already signed by the DNS provider "provider.com" and the
provider added any needed DNSSEC records, including DNSKEYs. The zone
NS RRset was managed by the zone owner. All of this is unchanged by
the addition of the HSYNC RRset.</t>

</section>
<section anchor="changing-the-hsync-nsmgmt-field-from-agent-to-owner"><name>Changing the HSYNC NSMGMT Field from AGENT To OWNER</name>

<t>Each Agent publishes the data it contributes to the zone under the
domain name {zone}.{identity}. I.e. the zone DNSKEYs that the Agent
agent.provider.com. uses are published as:</t>

<t>zone.example.agent.provider.com. DNSKEY ...
zone.example.agent.provider.com. DNSKEY ...</t>

<t>Likewise, the NS records for the zone are published as:</t>

<t>zone.example.ns.agent.provider.com. NS ...
zone.example.ns.agent.provider.com. NS ...</t>

<t>To migrate from "owner maintained" NS RRset to "Agent maintained", the
zone owner must verify that the NS RRset as published by the Agent is
correct and in sync with the NS RRset as published by the zone owner
itself.  After this verification the zone owner changes the HSYNC
NSMGMT field in the existing HSYNC records from NSMGMT=OWNER to
NSMGMT=AGENT.</t>

</section>
<section anchor="migrating-from-a-multi-signer-architecture-back-to-single-signer"><name>Migrating from a Multi-Signer Architecture Back to Single-Signer.</name>

<t>If, for some reason, a zone owner wants to migrate back to a
single-signer architecture (i.e. offboarding the second DNS Provider),
the process is essentially the reverse of the migration from
single-signer to multi-signer:</t>

<t><list style="numbers">
  <t>The zone owner offboards the second signing DNS Provider (only keeping
one signing DNS Provider).</t>
</list></t>

<t>When offboarding the second signing DNS Provider is signalled via the HSYNC RRset,
the multi-step process "remove signer" (as defined in <xref target="I-D.draft-ietf-dnsop-dnssec-automation"/>) is
initiated to remove the second DNS Provider from the zone in a series of
steps.</t>

<t>The zone is now essentially back to a single-signer architecture.
Once the offboarding is complete, the zone owner can remove the HSYNC
RRset designating the offboarded DNS Provider from the zone.</t>

<t>TO BE REMOVED BEFORE PUBLICATION:
# Rationale</t>

</section>
<section anchor="choice-of-the-hsync-mnemonic"><name>Choice of the HSYNC Mnemonic</name>

<t>Initially the mnemonic MSIGNER was used for the HSYNC RRset. However,
as work progressed it became clear that we want also non-signing DNS
Providers to be able to participate. So the RRset is a signalling
mehanism from zone owner to DNS Providers, some of which may or may
not be instructed to sign the zone. Therefore we suggest the mnemonic
HSYNC to indicate that this is a mechanism for "horizontal
synchronization" inside a zone.</t>

<t>But the mnemonic chosen is a very minor point and should a better
suggestion come up it would be great.</t>

</section>
<section anchor="separation-of-agent-and-combiner"><name>Separation of Agent and Combiner</name>

<t>It is possible to integrate all three multi-signer components (Signer,
Agent and Combiner) into a single piece of software (or two pieces,
depending on the preferred way of slicing the functionality). However,
such a composite module would be a fairly complex piece of software.
This document aims to describe the functional separation of the
different components rather than make a judgement on software design
alternatives.  Hence possible implementation choices are left to the
implementer.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>An architecture for automated multi-provider zone management is a complex
system with a number of components.
The authors believe that the only way to make such an architecture
useful in practice is via automation. However, automation is a double-edged
sword. It can both make the system more robust and more vulnerable.</t>

<t>While all communication between Agents is authenticated (either via
SIG(0) signatures ore TLS), the signalling from the zone owner to the
Agents is via the HSYNC RRset in an unsigned zone. This is a potential
attack vector. However, securing zone transfers from zone owner to DNS
providers is a well-known issue with lots of existing solutions (TSIG,
zone transfer via a secure channel, zone transfer-over-TLS,
etc). Employing some of these solutions is strongly recommended.</t>

<t>From a vulnerability point-of-view this architecture introduces
several new components into the zone signing and publication
process. In particular the Combiner and the Agents are new components
that need to be secure. The Combiner has the advantage of not having
to announce its location to the outside world, as it only needs to
communicate with internal components (the zone owner, the Signer and
the Agent).</t>

<t>The Agent is more vulnerable. It needs to be discoverable by other
Agents and hence it is also discoverable by an adversary. On the
other hand, the Agents are not needed for a new zone to be signed and
published, they are only needed when there are changes that require
the Agents to synchronize, which is an infrequent event.</t>

<t>Furthermore, should an Agent be unable to fulfill its role during the
execution of a change requiring synchronization, whether it is a
complex multi-signer process or perhaps only a change to the NS RRset, the
synchronization process will simply stop where it is. Regardless of
where the stop (or rather pause) occurs, the zone will be fully functional.
Once the Agent is able to resume its role, the synchronization process
will continue from where it left off.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations.</name>

<t><strong>Note to the RFC Editor</strong>: In this section, please replace
occurrences of "(This document)" with a proper reference.</t>

<section anchor="hsync-rr-type"><name>HSYNC RR Type</name>

<t>IANA is requested to update the "Resource Record (RR) TYPEs" registry
under the "Domain Name System (DNS) Parameters" registry group as
follows:</t>

<dl>
  <dt>Type</dt>
  <dd>
    <t>HSYNC</t>
  </dd>
  <dt>Value</dt>
  <dd>
    <t>TBD</t>
  </dd>
  <dt>Meaning</dt>
  <dd>
    <t>Zone owner designation of DNS providers enabling mutual discovery</t>
  </dd>
  <dt>Reference</dt>
  <dd>
    <t>(This document)</t>
  </dd>
</dl>

</section>
<section anchor="new-provider-synchronization-edns-option"><name>New Provider-Synchronization EDNS Option</name>

<t>This document defines a new EDNS(0) option, entitled "Provider-Synchronization",
assigned a value of TBD "DNS EDNS0 Option Codes (OPT)" registry</t>

<t>TO BE REMOVED UPON PUBLICATION:
<eref target="foo">https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11</eref></t>

<figure><artwork><![CDATA[
   +-------+--------------------------+----------+----------------------+
   | Value | Name                     | Status   | Reference            |
   +-------+--------------------------+----------+----------------------+
   | TBD   | Provider-Synchronization | Standard | ( This document )    |
   +-------+--------------------------+----------+----------------------+
]]></artwork></figure>

</section>
<section anchor="a-new-registry-for-edns-option-provider-synchronization-operation-codes"><name>A New Registry for EDNS Option Provider-Synchronization Operation Codes</name>

<t>The Provider-Synchronization option also defines an 8-bit operation field, for
which IANA is requested to create and mainain a new registry entitled
"Provider-Synchronization Operations", used by the Provider-Synchronization option. Initial
values for the "Provider-Synchronization Operations" registry are given below;
future assignments in in the 3-127 range are to be made through
Specification Required review <xref target="BCP26"/>.</t>

<figure><artwork><![CDATA[
+-----------+---------------------------------------------+-------------------+
| OPERATION | Mnemonic                                    | Reference         |
+-----------+---------------------------------------------+-------------------+
| 0         | forbidden                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 1         | HELLO                                       | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 2         | HEARTBEAT                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 3-127     | Unassigned                                  | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 128-255   | Private Use                                 | ( This document ) |
+-----------+---------------------------------------------+-------------------+
]]></artwork></figure>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC1996' target='https://www.rfc-editor.org/info/rfc1996'>
  <front>
    <title>A Mechanism for Prompt Notification of Zone Changes (DNS NOTIFY)</title>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='August' year='1996'/>
    <abstract>
      <t>This memo describes the NOTIFY opcode for DNS, by which a master server advises a set of slave servers that the master's data has been changed and that a query should be initiated to discover the new data. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1996'/>
  <seriesInfo name='DOI' value='10.17487/RFC1996'/>
</reference>

<reference anchor='RFC2136' target='https://www.rfc-editor.org/info/rfc2136'>
  <front>
    <title>Dynamic Updates in the Domain Name System (DNS UPDATE)</title>
    <author fullname='P. Vixie' initials='P.' role='editor' surname='Vixie'/>
    <author fullname='S. Thomson' initials='S.' surname='Thomson'/>
    <author fullname='Y. Rekhter' initials='Y.' surname='Rekhter'/>
    <author fullname='J. Bound' initials='J.' surname='Bound'/>
    <date month='April' year='1997'/>
    <abstract>
      <t>Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone. Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2136'/>
  <seriesInfo name='DOI' value='10.17487/RFC2136'/>
</reference>

<reference anchor='RFC3007' target='https://www.rfc-editor.org/info/rfc3007'>
  <front>
    <title>Secure Domain Name System (DNS) Dynamic Update</title>
    <author fullname='B. Wellington' initials='B.' surname='Wellington'/>
    <date month='November' year='2000'/>
    <abstract>
      <t>This document proposes a method for performing secure Domain Name System (DNS) dynamic updates. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='3007'/>
  <seriesInfo name='DOI' value='10.17487/RFC3007'/>
</reference>

<reference anchor='RFC2931' target='https://www.rfc-editor.org/info/rfc2931'>
  <front>
    <title>DNS Request and Transaction Signatures ( SIG(0)s )</title>
    <author fullname='D. Eastlake 3rd' initials='D.' surname='Eastlake 3rd'/>
    <date month='September' year='2000'/>
    <abstract>
      <t>This document describes the minor but non-interoperable changes in Request and Transaction signature resource records ( SIG(0)s ) that implementation experience has deemed necessary. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2931'/>
  <seriesInfo name='DOI' value='10.17487/RFC2931'/>
</reference>

<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC8901' target='https://www.rfc-editor.org/info/rfc8901'>
  <front>
    <title>Multi-Signer DNSSEC Models</title>
    <author fullname='S. Huque' initials='S.' surname='Huque'/>
    <author fullname='P. Aras' initials='P.' surname='Aras'/>
    <author fullname='J. Dickinson' initials='J.' surname='Dickinson'/>
    <author fullname='J. Vcelak' initials='J.' surname='Vcelak'/>
    <author fullname='D. Blacka' initials='D.' surname='Blacka'/>
    <date month='September' year='2020'/>
    <abstract>
      <t>Many enterprises today employ the service of multiple DNS providers to distribute their authoritative DNS service. Deploying DNSSEC in such an environment may present some challenges, depending on the configuration and feature set in use. In particular, when each DNS provider independently signs zone data with their own keys, additional key-management mechanisms are necessary. This document presents deployment models that accommodate this scenario and describes these key-management requirements. These models do not require any changes to the behavior of validating resolvers, nor do they impose the new key-management requirements on authoritative servers not involved in multi-signer configurations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8901'/>
  <seriesInfo name='DOI' value='10.17487/RFC8901'/>
</reference>

<reference anchor='RFC6891' target='https://www.rfc-editor.org/info/rfc6891'>
  <front>
    <title>Extension Mechanisms for DNS (EDNS(0))</title>
    <author fullname='J. Damas' initials='J.' surname='Damas'/>
    <author fullname='M. Graff' initials='M.' surname='Graff'/>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='April' year='2013'/>
    <abstract>
      <t>The Domain Name System's wire protocol includes a number of fixed fields whose range has been or soon will be exhausted and does not allow requestors to advertise their capabilities to responders. This document describes backward-compatible mechanisms for allowing the protocol to grow.</t>
      <t>This document updates the Extension Mechanisms for DNS (EDNS(0)) specification (and obsoletes RFC 2671) based on feedback from deployment experience in several implementations. It also obsoletes RFC 2673 ("Binary Labels in the Domain Name System") and adds considerations on the use of extended labels in the DNS.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='75'/>
  <seriesInfo name='RFC' value='6891'/>
  <seriesInfo name='DOI' value='10.17487/RFC6891'/>
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.draft-berra-dnsop-keystate' target='https://datatracker.ietf.org/doc/html/draft-berra-dnsop-keystate-01'>
   <front>
      <title>Signalling Key State Via DNS EDNS(0) OPT</title>
      <author fullname='Erik Bergström' initials='E.' surname='Bergström'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <author fullname='Leon Fernandez' initials='L.' surname='Fernandez'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <author fullname='Johan Stenstam' initials='J.' surname='Stenstam'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <date day='7' month='February' year='2025'/>
      <abstract>
	 <t>   This document introduces the KeyState EDNS(0) option code, to enable
   the exchange of SIG(0) key state information between DNS entities via
   the DNS protocol.  The KeyState option allows DNS clients and servers
   to include key state data in both queries and responses, facilitating
   mutual awareness of SIG(0) key status between child and parent zones.
   This mechanism addresses the challenges of maintaining
   synchronization of SIG(0) keys used for securing DNS UPDATE messages,
   thereby enhancing the efficiency and reliability of DNS operations
   that require coordinated key management.

   This document proposes such a mechanism.

   TO BE REMOVED: This document is being collaborated on in Github at:
   https://github.com/johanix/draft-berra-dnsop-opt-transaction-state
   (https://github.com/johanix/draft-berra-dnsop-transaction-state-00).
   The most recent working version of the document, open issues, etc,
   should all be available there.  The authors (gratefully) accept pull
   requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-berra-dnsop-keystate-01'/>
   
</reference>


<reference anchor='I-D.draft-ietf-dnsop-dnssec-automation' target='https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-dnssec-automation-03'>
   <front>
      <title>DNSSEC automation</title>
      <author fullname='Ulrich Wisser' initials='U.' surname='Wisser'>
         </author>
      <author fullname='Shumon Huque' initials='S.' surname='Huque'>
         <organization>Salesforce</organization>
      </author>
      <author fullname='Johan Stenstam' initials='J.' surname='Stenstam'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <date day='19' month='October' year='2024'/>
      <abstract>
	 <t>   This document describes an algorithm and protocol to automate the
   setup, operations, and decomissioning of Multi-Signer DNSSEC
   [RFC8901] configurations.  It employs Model 2 of the multi-signer
   specification, where each operator has their own distinct KSK and ZSK
   sets (or CSK sets), Managing DS Records from the Parent via CDS/
   CDNSKEY [RFC8078], and Child-to-Parent Synchronization in DNS
   [RFC7477] to accomplish this.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-dnsop-dnssec-automation-03'/>
   
</reference>

<referencegroup anchor='BCP26' target='https://www.rfc-editor.org/info/bcp26'>
  <reference anchor='RFC8126' target='https://www.rfc-editor.org/info/rfc8126'>
    <front>
      <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
      <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
      <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
      <author fullname='T. Narten' initials='T.' surname='Narten'/>
      <date month='June' year='2017'/>
      <abstract>
        <t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters. To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper. For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
        <t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed. This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
        <t>This is the third edition of this document; it obsoletes RFC 5226.</t>
      </abstract>
    </front>
    <seriesInfo name='BCP' value='26'/>
    <seriesInfo name='RFC' value='8126'/>
    <seriesInfo name='DOI' value='10.17487/RFC8126'/>
  </reference>
</referencegroup>




    </references>


<section anchor="change-history-to-be-removed-before-publication"><name>Change History (to be removed before publication)</name>

<t><list style="symbols">
  <t>This document is derived from the earlier document
draft-leon-dnsop-distributed-multi-signer-00</t>
</list></t>

<ul empty="true"><li>
  <t>Initial public draft.</t>
</li></ul>

</section>


  </back>

<!-- ##markdown-source:
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
AR2jce1X0wAA

-->

</rfc>

