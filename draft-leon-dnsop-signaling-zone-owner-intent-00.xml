<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-leon-dnsop-signaling-zone-owner-intent-00" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Signaling Zone Owner Intent">Signaling Zone Owner Intent</title>

    <author initials="L." surname="Fernandez" fullname="Leon Fernandez">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>leon.fernandez@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="E." surname="Bergström" fullname="Erik Bergström">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>erik.bergstrom@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="J." surname="Stenstam" fullname="Johan Stenstam">
      <organization>The Swedish Internet Foundation</organization>
      <address>
        <postal>
          <country>Sweden</country>
        </postal>
        <email>johan.stenstam@internetstiftelsen.se</email>
      </address>
    </author>
    <author initials="S." surname="Crocker" fullname="Steve Crocker">
      <organization>Edgemoor Research Institute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>steve@shinkuro.com</email>
      </address>
    </author>

    <date />

    <area>Internet</area>
    <workgroup>DNSOP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document introduces a standardized mechanism for zone owners to
signal their intent regarding DNS provider responsibilities through
DNS itself. It defines a new DNS RRtype, HSYNC (Horizontal
Synchronization), that enables zone owners to designate which
providers are authorized to serve and/or sign their zones, control
whether providers or the zone owner manages the NS RRset, and specify
zone transfer chain configurations.</t>

<t>The HSYNC record allows DNS providers to discover each other and
establish secure communication channels, either via DNS messages
secured by SIG(0) signatures or via a RESTful API secured by TLS. This
provider-to-provider communication via Agents enables automated
coordination for tasks such as NS RRset management, zone transfers,
and DNSSEC-related operations. This specification covers the provider
discovery and communication establishment aspects.</t>

<t>The document defines two new roles to facilitate this synchronization:
the Agent responsible for provider-to-provider communication and the
Combiner which merges unsigned zone data from the zone owner with
managed data from providers.</t>

<t>While a distributed DNSSEC multi-signer architecture (similar to 
"model 2" in RFC8901) is an important application of this framework, 
the HSYNC mechanism supports broader provider synchronization needs.</t>

<t>The specific synchronization algorithms for multi-signer operation are
described in <xref target="I-D.draft-ietf-dnsop-dnssec-automation"/>. Specification
for how to express these algorithms over provider-to-provider
communication is left for a follow-up document.</t>

<t>TO BE REMOVED: This document is being collaborated on in Github at:
<eref target="https://github.com/johanix/draft-leon-dnsop-signaling-zone-owner-intent">https://github.com/johanix/draft-leon-dnsop-signaling-zone-owner-intent</eref>.
The most recent working version of the document, open issues, etc, should all be
available there.  The authors (gratefully) accept pull requests.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>DNS zone owners often need to work with multiple DNS providers to
serve their zones. These providers may have different
responsibilities - some may sign the zone, some may only serve it, and
some may do both. Traditionally, the configuration of these providers
and their responsibilities has been handled through manual processes
and provider-specific mechanisms.</t>

<t>This document presents a standardized mechanism for zone owners to
signal their intent regarding DNS provider responsibilities through
DNS itself. It defines a new DNS RRtype, HSYNC, that allows zone
owners to:</t>

<t><list style="symbols">
  <t>Designate which providers should serve the zone.</t>
  <t>Specify whether each provider should sign the zone.</t>
  <t>Control whether providers or the zone owner manages the NS RRset.</t>
  <t>Specify on a provider-level how the zone transfer chain should be setup.</t>
  <t>Enable providers to locate each other and establish secure communication.</t>
</list></t>

<t>By publishing this information in the DNS, zone owners ensure all
providers receive consistent configuration information. This enables
automated coordination between providers for tasks like:</t>

<t><list style="symbols">
  <t>NS RRset management across multiple providers.</t>
  <t>Addition or removal of providers.</t>
  <t>Transition between different signing configurations.</t>
  <t>Management of DNSSEC-related records when multiple signers are used.</t>
  <t>Zone transfer chain configuration.</t>
</list></t>

<t>Knowledge of DNS NOTIFY <xref target="RFC1996"/> and DNS Dynamic Updates
<xref target="RFC2136"/> and <xref target="RFC3007"/> is assumed. DNS SIG(0) transaction
signatures are documented in <xref target="RFC2931"/>.</t>

<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "<strong>MUST</strong>", "<strong>MUST NOT</strong>", "<strong>REQUIRED</strong>", "<strong>SHALL</strong>",
"<strong>SHALL NOT</strong>", "<strong>SHOULD</strong>", "<strong>SHOULD NOT</strong>", "<strong>RECOMMENDED</strong>",
"<strong>NOT RECOMMENDED</strong>", "<strong>MAY</strong>", and "<strong>OPTIONAL</strong>" in this document
are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

</section>
</section>
<section anchor="terminology"><name>Terminology</name>

<t>Provider:
   In the context of this document the term "provider" always indicate
   a "DNS provider", i.e. an entity that provides DNS services,
   eg. DNSSEC-signing and/or authoritative nameservice.
...</t>

</section>
<section anchor="requirements"><name>Requirements</name>

<t>The requirements for an architecture facilitating DNS provider
synchronization are defined as follows:</t>

<t><list style="symbols">
  <t>Zone owners MUST be able to signal to their DNS providers
information sufficient for the providers to identify each other and
establish secure communication.</t>
  <t>All signaling from zone owner to DNS providers SHOULD be carried out
via data in the served zone, ensuring that all providers receive the
same configuration information at approximately the same time.</t>
  <t>Zone owners MUST be able to explicitly specify which DNS providers
should serve and/or sign their zones.</t>
  <t>Zone owners MUST be able to signal the intent to onboard an
additional DNS provider. This MUST automatically initiate the
appropriate provider synchronization processes.</t>
  <t>Zone owners MUST be able to signal the intent to offboard an
existing DNS provider. This MUST automatically initiate the
appropriate provider synchronization processes.</t>
  <t>By engaging DNS providers for signing, the zone owner MUST give up
control over the following records:
  <list style="symbols">
      <t>All DNSSEC-related records in the zone.</t>
      <t>Any CDS and/or CSYNC RRsets.</t>
    </list></t>
  <t>It SHOULD be possible but NOT MANDATORY for the zone owner to also
delegate the management of the NS RRset to the set of DNS providers.</t>
  <t>DNS providers MUST be able to locate and establish secure
communication with each other based on the information
provided by the zone owner in the DNS via the HSYNC RRset.</t>
  <t>The architecture SHOULD support both DNS-based and API-based
communication between providers.</t>
  <t>The architecture SHOULD allow for smooth transitions between
different provider configurations without service interruption.</t>
</list></t>

</section>
<section anchor="dns-provider-synchronization-scenarios"><name>DNS Provider Synchronization Scenarios</name>

<t>The HSYNC framework supports a variety of scenarios where zone owners
need to coordinate multiple DNS providers. The following scenarios
illustrate the range of use cases this mechanism enables:</t>

<section anchor="coordinated-ns-record-management"><name>Coordinated NS Record Management</name>

<t>A zone owner uses two DNS providers - one signs and serves the zone
while another only serves it. Through the HSYNC RRset, the zone owner
signals to both providers who is authorized to do what. The providers'
Agents establish secure communication channels, allowing them to
coordinate NS RRset management across all authoritative nameservers
without manual intervention. The zone owner can decide whether to
retain control of NS records or delegate this responsibility to the
providers.</t>

</section>
<section anchor="multi-provider-dnssec-redundancy"><name>Multi-Provider DNSSEC Redundancy</name>

<t>A zone owner needs to eliminate the "signing" single point of failure
in their DNSSEC setup. By contracting with multiple "multi-signer
capable" DNS providers and using data from the HSYNC RRset, the zone
owner enables each provider to:</t>

<t><list style="symbols">
  <t>Locate other designated providers via the HSYNC RRset and establish
secure communications.</t>
  <t>Coordinate DNSKEY, CDS, CSYNC and NS RRset management.</t>
  <t>Sign the zone using its own DNSKEYs while publishing a DNSKEY RRset
that includes keys from all authorized signers.</t>
  <t>Distribute the signed zone to its authoritative nameservers and
possibly to non-signing downstream providers.</t>
</list></t>

<t>This creates a fully redundant DNSSEC infrastructure with no single
point of failure.</t>

</section>
<section anchor="provider-transition-management"><name>Provider Transition Management</name>

<t>A zone owner wishes to replace their current DNSSEC-signing provider
with a new one. Using the mechanism provided by the HSYNC RRset, they
are able to:</t>

<t><list style="symbols">
  <t>Add a new HSYNC record with State="ON" for the incoming provider,
initiating the onboarding process.</t>
  <t>Allow the automated synchronization between providers to handle key
exchange and transition.</t>
  <t>Once the new provider is fully operational, change the HSYNC State
for the outgoing provider to "OFF" when convenient.</t>
  <t>The providers then automatically coordinate the safe removal of the
outgoing provider's data.</t>
</list></t>

<t>This entire process maintains continuous service and valid signatures
while transitioning between DNS providers.</t>

</section>
<section anchor="delegated-ns-management"><name>Delegated NS Management</name>

<t>A zone owner wants DNS providers to handle NS RRset management while
retaining control of other zone data. By setting the NSMgmt field to
"AGENT" in the HSYNC RRset, the zone owner explicitly delegates NS
management responsibility to the DNS providers. The DNS providers then
coordinate to maintain a consistent NS RRset across all authoritative
servers, adding or removing nameservers as needed based on the current
set of authorized providers.</t>

</section>
<section anchor="phased-migration-to-multi-provider-architecture"><name>Phased Migration to Multi-Provider Architecture</name>

<t>A zone owner currently using a single provider wants to implement a
more robust architecture but prefers a gradual transition. They can:</t>

<t><list style="symbols">
  <t>First add a single HSYNC record designating their current provider,
making no immediate operational changes</t>
  <t>Later add a second HSYNC record to designate an additional provider</t>
  <t>Allow the providers to automatically coordinate the transition</t>
  <t>Optionally delegate NS management to the providers by changing
NSMgmt from "OWNER" to "AGENT"</t>
</list></t>

<t>This approach enables a controlled, phased migration to a more
resilient multi-provider architecture.</t>

</section>
</section>
<section anchor="the-agent-integrated-signer-vs-separate-agent"><name>The Agent: Integrated Signer vs Separate Agent</name>

<t>In a distributed setup there must be a service located with each
DNS Provider that manages communication with other DNS
Providers. This is referred to as the Agent.</t>

<t>It is possible to implement support for the synchronization and
communication needs directly into an existing component of the
provider's provisioning infrastructure (which may be as simple as an
authoritative nameserver with or without the ability to do online
DNSSEC signing). In that case this component implements the Agent
functionality.</t>

<t>However, it is also possible to separate the synchronization and
communication needs into a separate agent. This Agent sits next to the
existing infrastructure, and is under the same administrative control
(the "DNS Provider"), but is a separate piece of software. Each Agent
is configured as a "secondary nameserver" and receives the (usually
signed) zone. In this document the functional separation using a
distinct Agent is used for clarity, not as a statement on preferred
implementation choice.</t>

<t>The "separate Agent" design has the major advantage of leaving the
DNSSEC-signer (if any) outside of the synchronization and
communication complexity. The requirements are only that the Agent is
treated as a normal secondary (it receives NOTIFY messages and is able
to request zone transfers).</t>

</section>
<section anchor="source-of-truth"><name>Source of Truth</name>

<t>A common design for DNSSEC signing (regardless of multi-signer) is to
use a separate, bump-on-the-wire Signer. This is a Signer that
receives the unsigned zone via an incoming zone transfer, signs the
zone, and publishes the signed zone via an outbound zone transfer. In
such a design the source of truth has been split up between the "zone
owner" (source of truth for all non-DNSSEC zone data), and the Signer
(source of truth for all DNSSEC data in the zone plus the DNSKEY RRset).</t>

<t>In the proposed architecture the source of truth is further split up
into three participants:</t>

<t><list style="symbols">
  <t>The zone owner is the source of truth for all unsigned zone data,
except DNSSEC data and possibly the NS RRset.</t>
  <t>The Signer is the source of truth for all data generated via DNSSEC
signing: own DNSKEYs, NSEC/NSEC3 RRs, RRSIGs, etc.</t>
  <t>The Agent is the source of truth for the RRsets that must be kept in
sync across all the Signers for the zone. This includes the DNSKEYs
from other providers, CDS and CSYNC RRsets. Possibly also the NS RRset.</t>
</list></t>

<t>The NS RRset is an interesting special case. Traditionally the NS
RRset is maintained by the zone owner, but based on data from the DNS
providers (as authoritative nameservers is a primary service for the
DNS provider). However, in the proposed architecture the NS RRset
should preferably be maintained by the Agents. For this reason the
proposed design makes control of the NS RRset explicit and the
responsibility of the zone owner to choose whether to retain control
or delegate to the Agents. Hence:</t>

<t><list style="symbols">
  <t>The Agent is the source of truth for the NS RRset, subject to the
policy of the zone owner, as described in the HSYNC RRset.</t>
</list></t>

<t>Making the control of the NS RRset explicit is useful regardless of
whether a zone uses multiple signers or single signer, as this makes
the zone owner intent explicit.</t>

<t>To be able to keep the Signer as simple as possible, the changes to the
NS, DNSKEY, CDS and CSYNC RRsets must be introduced into the unsigned
zone before the zone reaches the Signer. Likewise, to keep the zone
owner as simple as possible (i.e. not involved in the details of the
multi-signer automation) these changes must be introduced into the
unsigned zone after the zone leaves the zone owner.</t>

<section anchor="the-combiner"><name>The Combiner</name>

<t>The consequence of these requirements is that the DNSKEY, CDS and
CSYNC RRsets (and possibly the NS RRset) are maintained via a separate
piece of software inserted between the zone owner and the Signer. This
is referred to as the Combiner.</t>

<t>The Combiner has the following features:</t>

<t><list style="symbols">
  <t>It supports inbound zone transfer of the unsigned zone from the
zone owner.</t>
  <t>It receives updates for the NS, DNSKEY, CDS and CSYNC
RRsets from the Agent. Typically the mechanism used is DNS UPDATE
with a TSIG signature, as this is easy to configure in a local
context. However, other mechanisms, including APIs, are possible.</t>
  <t>It stores all data received from the Agent separate from
the zone data received from the zone owner.</t>
  <t>Whenever it receives a new unsigned zone from the zone owner it
COMBINES zone data from the zone owner (the majority of the zone)
with specific zone data under control of the Agent: three specific
RRsets, all in the apex of the zone: the DNSKEY, CDS and CSYNC
RRsets. According to zone owner policy expressed in the HSYNC RRset
it will also update the NS RRset.</t>
  <t>It is policy free (apart from being limited to the four specified
RRsets). I.e. the Combiner is not making any judgement about what
data to include in the zone from the four defined RRsets. That
judgement is the role of the Agent.</t>
  <t>It does not sign the zone.</t>
  <t>It provides outbound zone transfer of the combined zone to the
Signer.</t>
</list></t>

<t>Example setup with two signers showing the logical flow of zone data
between the zone owner, the Combiner, the Signer and the Agent:</t>

<figure><artwork><![CDATA[
                            +--------------+
                            |     owner    |
               xfr          +-+---------+--+    xfr
            /----------------/           \----------------------\
           /                                                     \
    +-----+----+    DNS  +-------+ DNS/API +-------+  DNS    +----+-----+
    | combiner +<--------+ agent +---------+ agent +-------->+ combiner |
    +-----+----+  UPDATE +--+----+         +--+----+ UPDATE  +----+-----+
          |                 ^                 ^                 |
          v xfr             |                 |                 v xfr
    +-----+----+     xfr    |                 |   xfr      +----+-----+
    |  signer  +------------+                 +------------+  signer  |
    +-----+----+                                           +----+-----+
          |                                                     |
          v                                                     v
       +--+--+                                               +--+--+
       | NS  |--+                                            | NS  |+
       +-----+  |--+                                         +-----+|-+
          +-----+  |                                            +---+ |
             +-----+                                              +---+
]]></artwork></figure>

</section>
<section anchor="the-dns-provider"><name>The DNS Provider</name>

<t>A "DNS Provider" is a term that is most commonly used to refer to an
entity that provides authoritative DNS service to one or more zone
owners. In the context of this document it is used to refer to an
entity that provides some subset of the following services:</t>

<t><list style="symbols">
  <t>Signing a zone received from the zone owner.</t>
  <t>Serving the zone via a set of authoritative nameservers.</t>
  <t>Distributing the signed zone to other downstream DNS Providers.</t>
</list></t>

<t>In addition to the above services a DNS Provider MUST also provide:</t>

<t><list style="symbols">
  <t>An Agent for synchronization with other DNS Providers</t>
  <t>A Combiner for the management of changes to the zone via
the synchronization among Agents (if it provides a signer)</t>
</list></t>

<t>I.e. in the setup above there are two DNS Providers, both of which are
"complete" in the sense that they provide all three of the above
services.</t>

</section>
</section>
<section anchor="identifying-the-designated-dns-providers"><name>Identifying the Designated DNS Providers</name>

<t>It is the responsibility of the zone owner to choose a set of "DNS
Providers", either internal or external to the zone owner's
organization. These DNS Providers MUST be clearly and uniquely
designated via publication in the HSYNC RRset, located at the apex of
the zone and consisting of one HSYNC record for each signer.</t>

<t>The HSYNC RRset MUST be added, by the zone owner, to the, typically
unsigned, zone that the zone owner maintains so that this RRset is
visible to the downstream DNS Providers and their Agents.</t>

</section>
<section anchor="the-hsync-rrset"><name>The HSYNC RRset</name>

<t>The HSYNC RR has the zone name that publishes the HSYNC RRset as the
owner name (i.e. the HSYNC RRset must be located at the apex of the
zone). The RDATA consists of five fields "State","NSMgmt", "Sign",
"Identity" and "Upstream":</t>

<t>zone.example.    IN HSYNC  State  NSMgmt  Sign  Identity  Upstream</t>

<t>State:
    Unsigned 8-bit. Defined values are 1=ON and 2=OFF. The value 0
    is an error.  Values 3-127 are presently undefined. Values 128-255
    are reserved for private use. The presentation format MUST
    use the tokens "ON" and "OFF".</t>

<t>NSMgmt:
    Unsigned 8-bit. Defined values are 1=Zone owner and
    2=Agent. The value 0 is an error. Values 3-255 are presently
    undefined (and not expected to be defined). The presentation
    format MUST use the tokens "OWNER" and "AGENT".</t>

<t>Sign:
    Unsigned 8-bit. Defined values are 1=SIGN and 2=NOSIGN. The value
    0 is an error. If Sign=YES for a particular HSYNC record, then the
    signer associated with that Identity is a designated signer for
    the zone. The presentation format MUST use the tokens "SIGN" and 
    "NOSIGN".</t>

<t>Identity:
    Domain name. Used to uniquely identify the Agent for the DNS Provider
    that the Agent represents.</t>

<t>Upstream:
    Domain name. Used to uniquely identify the upstream DNS Provider
    that this DNS Provider is a downstream of. The special case of "."
    is used to signal that this DNS Provider either has no upstream
    (is the zone owner), or that the upstream is to be configured
    manually.</t>

<t>Example:</t>

<t>zone.example.   IN HSYNC  ON  AGENT  SIGN  agent.provider.example. upstream.</t>

<section anchor="semantics-of-the-hsync-state-field"><name>Semantics of the HSYNC State Field</name>

<t>The HSYNC State field is used to signal to all Agents what the status
of each DNS Provider is from the point-of-view of the zone owner. The
two possible values are "ON" and "OFF" where "ON" means that the DNS
Provider is a currently a designated DNS Provider for the zone (or in
the process of being on-boarded and "OFF" means that the DNS Provider
is previously a designated DNS Provider for the zone that is in the
process of being offboarded.</t>

<t>One use for the "OFF" state is that the offboarding process involves
the remaining DNS Providers (hence the signalling) and it is important
to know which DNS Provider is being offboarded so that the correct
data may be removed in the correct order, eith during the multi-signer
"remove signer" process (see <xref target="RFC8901"/>) or, a simpler "remove auth
nameserver" process.</t>

<t>Once the offboarding process is complete the HSYNC RR for the
offboarded DNS Provider may be removed from the zone at the zone
owners discretion.</t>

<t>Another use for the State=OFF is during initial setup of a new DNS
provider. As long as State=OFF, no data from the provider must be used
by other providers. However, it is possible to verify that
communication, etc, works as intended.</t>

</section>
<section anchor="semantics-of-the-hsync-nsmgmt-field"><name>Semantics of the HSYNC NSMgmt Field</name>

<t>The NSMgmt field is used to signal to the Agents who is responsible for
the contents of the NS RRset for the zone. The two possible values are
"OWNER" and "AGENT".</t>

<t>The value "OWNER" signals that the zone owner is responsible for the NS
RRset and is responsible for updating the NS RRset (either with or
without the unified data from all Agents). In this case the Agents MUST NOT
instruct the Combiner to update the NS RRset.</t>

<t>The value "AGENT" means that the Agents representing DNS Providers that
sign the zone are responsible for the contents of the NS RRset. In
this case the these Agents MUST instruct the local Combiner to update the NS
RRset with the unified NS RRset data from all Agents.</t>

<section anchor="limitation-of-scope-for-hsync-based-ns-management"><name>Limitation of Scope for HSYNC-based NS Management</name>

<t>For the purpose of this document the NSMgmt Field in the HSYNC record
only covers the NS RRset. I.e. it does not include the address records
of in-bailiwick authoritative nameservers. The reasons are:</t>

<t><list style="symbols">
  <t>Limiting the possibility of DNS Providers "polluting" the name space
of the zone.</t>
  <t>Keeping the specification simpler, as the concept of "delegated" NS
management is new.</t>
</list></t>

<t>It is possible to make an argument for delegating management of
address records for in-bailiwick authoritative nameservers, but this
document does not.</t>

</section>
</section>
<section anchor="semantics-of-the-hsync-sign-field"><name>Semantics of the HSYNC Sign Field</name>

<t>The Sign field is used to signal to all Agents whether the zone owner
requests that the DNS Provider that the Agent represents should sign
the zone or not. The two possible values are "SIGN" and "NOSIGN" where
"SIGN" means that the Agent represents a a DNS Provider that should
sign the zone and "NOSIGN" means that the Agent does not.</t>

<t>When Sign=NOSIGN the Agent MUST still participate in the communication
between Agents for the zone, to ensure proper synchronization of data
between providers. If NSmgmt=AGENT, the Agent should still instruct
the Combiner to update the NS RRset, otherwise no.</t>

</section>
</section>
<section anchor="communication-between-agents"><name>Communication Between Agents</name>

<t>For the communication between Agents there are two choices that need to
be made among the designated Agents for a zone. The first is what
"transport" to use for the communication. The second is what
"synchronization" model to use when executing future synchronization
processes.</t>

<t>The two defined transport alternatives are:</t>

<t><list style="symbols">
  <t>DNS-based communication (mandatory to support)</t>
  <t>REST API-based communication</t>
</list></t>

<t>Each has pros and cons and at this point in time it is not clear that
one always is better than the other. To simplify the choice of
transport DNS-based communication is mandatory to support and the REST
API-based communication may only be used if all Agents support
it. Supported transports are signaled in the Provider-Synchronization
EDNS(0) Option (see section NNN below).</t>

<t>The two defined synchronization alternatives are:</t>

<t><list style="symbols">
  <t>Leader/Follower synchronization (mandatory to support)</t>
  <t>Peer-to-Peer synchronization</t>
</list></t>

<t>Just as for transport, supported synchronization models are signaled
in the Provider-Synchronization EDNS(0) Option (see section <xref target="provider-synchronization-edns0-option-format">Provider-Synchronization EDNS(0) Option</xref> below).</t>

<t>Regardless of the synchronization model and communication method used,
the Agents SHOULD exchange all needed information about the zone and
the DNS Provider they represent to enable the synchronization
processes to execute correctly. This includes notifications about
changes to DNSKEYs, changes to the NS RRset, etc. Depending on
synchronization model it may also include instructions for changes to
the zone.</t>

<section anchor="agent-communication-via-dns"><name>Agent Communication via DNS</name>

<t>This transport alternative is based on the observation that all the
communication needs between Agents can be expressed via DNS
messages. Notifications are sent as DNS NOTIFY messages. Requests for
changes to a zone are sent as DNS UPDATE messages, etc. The sole
remaining communication requirement is for how to communicate
information about the current state between Agents in an ongoing
multi-signer process. For this reason a dedicated EDNS(0) opcode
specifically for multi-signer synchronization is proposed.</t>

<t>This model is based on <xref target="I-D.draft-berra-dnsop-keystate"/> that solves
a similar problem for delegation synchronization between child and
parent, which has already been implemented and shown to work.</t>

</section>
<section anchor="agent-communication-via-rest-api"><name>Agent Communication via REST API</name>

<t>REST APIs are well-known and a natural fit for many distributed
systems. The challenge is mostly in the initial setup of secure
communication. The certificates need to be validated, preferably
without a requirement on trusting a third party CA. The API endpoints
for each Agent need to be located. Once secure communication has been
established, using a REST API for Agent communication is
straight-forward.</t>

</section>
<section anchor="locating-remote-agents-johani-omskriven-20250228"><name>Locating Remote Agents (johani: omskriven 20250228)</name>

<t>When an Agent receives a zone via zone transfer from the Signer it will
analyze the zone to see whether it contains an HSYNC RRset. If there
is no HSYNC RRset the zone MUST be ignored by the Agent from the
point-of-view of provider synchronization.</t>

<t>If, however, the zone does contain an HSYNC RRset then the Agent must
analyze this RRset to identify the other Agents for the zone via their
target names in each HSYNC record. If any of the other Agents listed in
the HSYNC RRset is previously unknown to this Agent then secure
communication with this other Agent MUST be established.</t>

<t>Secure communication can be achieved via various transports and it is
up to the Agents in the zone's HSYNC records to determine amongst
themselves. This document proposes two transports: "DNS" and
"API". "DNS" is designated as as a baseline that Agents MUST support to
be compliant.</t>

<t>The following two subsections describe the mechanism by which an Agent
SHOULD locate a remote Agent and establish secure DNS-based and
API-based communications, respectively.</t>

<section anchor="locating-a-remote-dns-method-agent-johani-omskriven-20250228"><name>Locating a Remote DNS-Method Agent (johani: omskriven 20250228)</name>

<t>Locating a remote Agent using the DNS mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate a URI record for the DNS protocol for
the HSYNC identity. This provides the domain name and port to
which DNS messages should be sent.</t>
  <t>Lookup and DNSSEC-validate the SVCB record of the URI record target
to get the IP addresses to use for communication with the remote
Agent. If the returned SVCB record includes a "port=NNN" hint then
this MUST be ignored. I.e. the port to use is defined by the URI
record.</t>
  <t>Lookup and DNSSEC-validate the KEY record of the URI record target
name.  This enables verification of the SIG(0) public key of the
remote Agent once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote Agent:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  SIGN  agent.provider.com. agent.zone.example.</t>

<t>The local Agent will look up the URI record for agent.provider.com:</t>

<t>_dns._tcp.agent.provider.com.  IN  URI  10 10 "dns://ns.provider.com:5399/"
_dns._tcp.agent.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for ns.provider.com. SVCB to get the IPv4
and IPv6 addresses as ipv4hints and ipv6hints in the response to the
SVCB query:</t>

<t>ns.provider.com.   IN  SVCB  1 ipv4hint=5.6.7.8 ipv6hint=2001::53
ns.provider.com.   IN  RRSIG SVCB …</t>

<t>and also a look up for the KEY record for ns.provider.com, which
may look like this:</t>

<t>ns.provider.com.  IN  KEY …
ns.provider.com.  IN  RRSIG KEY …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local Agent is able to initiate communication with
the remote Agent and verify the identity of the responding party via the
validated KEY record for the remote Agents SIG(0) public key.</t>

</section>
<section anchor="locating-a-remote-api-method-agent-johani-omskriven-20250228"><name>Locating a Remote API-Method Agent (johani: omskriven 20250228)</name>

<t>Locating a remote Agent using the API mechanism consists of the
following steps:</t>

<t><list style="symbols">
  <t>Lookup and DNSSEC-validate the URI record for for the HTTPS protocol
for the HSYNC identity. This provides the base URL that will be used
to construct the individual API endpoints for the REST API. It also
provides the port to use.</t>
  <t>Lookup and DNSSEC-validate the SVCB record for the URI record
target.  This provides the IP-addresses to use for communication
with the Agent. If the returned SVCB record includes a "port=NNN" hint
then this MUST be ignored. I.e. the port to use is defined by the
URI record.</t>
  <t>Lookup and DNSSEC-validate the TLSA record for the port and protocol
specified in the URI record. This will enable verification of the
certificate of the remote Agent once communication starts.</t>
</list></t>

<t>Example: given the following HSYNC record for a remote Agent:</t>

<t>zone.example.     IN HSYNC  ON  AGENT  YES  agent.provider.com. agent.zone.example.</t>

<t>the local Agent will look up the URI record for agent.provider.com:</t>

<t>_https._tcp.agent.provider.com.  IN  URI  10 10 “https://api.provider.com:443/api/v2/”
_https._tcp.agent.provider.com.  IN  RRSIG URI …</t>

<t>which triggers a lookup for api.provider.com IPv4 and IPv6
addresses as hints in an SVCB RR:</t>

<t>api.provider.com.   IN  SVCB 1 ipv4hint=1.2.3.4 ipv6hint=2001::bad:cafe:443
api.provider.com.   IN  RRSIG SVCB …</t>

<t>Now we know the IP-address and the port as well as the base URL to
use. Finally the TLSA record for _443._tcp.api.provider.com is
looked up, with a response that may look like this:</t>

<t>_443._tcp.api.provider.com.  IN  TLSA 3 1 1 ….
  _443._tcp.api.provider.com.  IN  RRSIG TLSA …</t>

<t>Once all the DNS lookups and DNSSEC-validation of the returned data
has been done, the local Agent is able to initiate communication with
the remote Agent and verify the identity of the responding party via the
TLSA record for the remote Agents certificate.</t>

<section anchor="fallback-to-dns-based-communication-johani-omskriven-20250228"><name>Fallback to DNS-based Communication (johani: omskriven 20250228)</name>

<t>If the API-based communication fails, either because needed DNS
records are missing, the TLSA record fails to validate the remote Agents
certificate or the remote Agent simply doesn't respond, the local Agent
MUST fall back to DNS-based communication.</t>

</section>
</section>
</section>
<section anchor="the-initial-hello-phase-johani-omskriven-20250228"><name>The Initial HELLO Phase (johani: omskriven 20250228)</name>

<t>When two Agents need to communicate with each other for the first time
(because they are both deisgnated signers for the same zone), they
need to establish secure communication. This is done in a "HELLO"
phase where the Agents exchange information about their capabilities.</t>

<t>If all the information needed for API-based transport for the remote
party was available, the Agent SHOULD attempt an API-based HELLO. If,
however, this fails for some reason, it should fall back to DNS-based
HELLO.</t>

<section anchor="dns-based-hello-phase-johani-omskriven-20250228"><name>DNS-based HELLO Phase (johani: omskriven 20250228)</name>

<t>When using DNS-based communication the HELLO phase is done by sending
a NOTIFY(SOA) for the zone that triggered the need for
communication. The NOTIFY message MUST contain a Multi-Signer EDNS(0)
Option (see section NNN below).</t>

<t>In the Provider-Synchronization EDNS(0) Option the OPERATION field
MUST have the value "HELLO" (1). Furthermore, the Agent signals its
transport and synchronization capabilities in the TRANSPORT and
SYNCHRONIZATION fields. This message is signed with the SIG(0) key for
the local Agent for which the public key is published as a KEY record
for the Agent.</t>

<t>In the response to the NOTIFY, the remote Agent does the same and the
two Agents can now verify each other's identity and are also aware of
the other Agents transport and synchronization capabilities.</t>

</section>
<section anchor="api-based-hello-phase-johani-jobbigt"><name>API-based HELLO Phase (johani: jobbigt)</name>

<t>When using API-based communication the HELLO phase is done by sending
a REST API POST request to the remote Agent at the "/hello"
endpoint. The request MUST contain a JSON encoded object with the
following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the local Agent.</t>
  <t>"synchronization": The synchronization capabilities of the local Agent.</t>
</list></t>

<t>The response MUST contain a JSON object with the following fields:</t>

<t><list style="symbols">
  <t>"transport": The transport capabilities of the remote Agent.</t>
  <t>"synchronization": The synchronization capabilities of the remote Agent.</t>
</list></t>

</section>
<section anchor="interpretation-of-the-hello-responses-johani-omskriven-20250228"><name>Interpretation of the HELLO Responses (johani: omskriven 20250228)</name>

<t>Once an Agent has received HELLO responses from all other Agents that are
designated signers for the zone, it knows the capabilities of the Agents
as a group. It can then use this information to determine which
transport to use:</t>

<t><list style="symbols">
  <t>If all Agents support API-based communication, the Agents will use
API-based communication for this zone.</t>
  <t>If one or more Agents only support DNS-based communication, the Agents
will use DNS-based communication for this zone.</t>
</list></t>

<t>Likewise, each Agent now knows the synchronization capabilities of the
other Agents and can determine which synchronization model to use:</t>

<t><list style="symbols">
  <t>If all Agents support the Peer-to-Peer synchronization model, the Agents
will use the Peer-to-Peer synchronization model for this zone.</t>
  <t>If one or more Agents only support the Leader/Follower synchronization
model, the Agents will use the Leader/Follower synchronization model
for this zone.</t>
</list></t>

</section>
</section>
<section anchor="provider-synchronization-edns0-option-format"><name>Provider-Synchronization EDNS(0) Option Format</name>

<t>This document uses an Extended Mechanism for DNS (EDNS0) <xref target="RFC6891"/>
option to include DNS Provider synchronization information in DNS
messages.</t>

<t>This option is structured the same way as the KeyState option
described in <xref target="I-D.draft-berra-dnsop-keystate"/>, which has been
implemented and shown to work for a similar use case. The requirements
for DNS Provider synchronization are sufficiently different that it is
not possible to re-use the KeyState OPT also for this purpose and
therefore a new EDNS(0) option is defined here.</t>

<t>The Provider-Synchronization EDNS(0) option is structured as follows:</t>

<figure><artwork><![CDATA[
                                               1   1   1   1   1   1
       0   1   2   3   4   5   6   7   8   9   0   1   2   3   4   5
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 0:  |                            OPTION-CODE                        |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 2:  |                           OPTION-LENGTH                       |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 4:  |           OPERATION           |           TRANSPORT           |
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 8:  |        SYNCHRONIZATION        |                               /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
 10: / OPERATION-BODY                                                /
     +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
]]></artwork></figure>

<t>Field definition details:</t>

<t>OPTION-CODE:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains the value TBD
    for Multi-Signer.</t>

<t>OPTION-LENGTH:
    2 octets / 16 bits (defined in <xref target="RFC6891"/>) contains
    the length of the payload (everything after OPTION-LENGTH) in
    octets and should be 4 plus the length of the OPERATION-BODY field
    (which may be zero octets long).</t>

<t>OPERATION:
    8 bits. Signals the type of operation the message
    performs. This document defines the two operations HELLO and
    HEARTBEAT. For a complete distributed multi-signer specification a
    number of additional operations will need to be allocated to be
    able to describe the states in the different multi-signer
    processes. This allocation must be done either in a revision to
    this document or in a subsequent document.</t>

<t>TRANSPORT:
    8 bits. Encodes the transport capabilities of the Agent. With
    8 bits it is possible to define up to 8 different transports of
    which this document defines two: DNS and API.</t>

<t>MULTI-SIGNER SYNC:
    8 bits. Only used for the case of multi-signer synchronization.
    Encodes the multi-signer synchronization capabilities of the Agent.
    With 8 bits it is possible to define up to 8 different
    synchronization models of which this document identifies two:
    Leader/Follower and Peer-to-Peer.</t>

<t>OPERATION-BODY:
    Variable-length. Used to carry operation-specific parameters.</t>

<section anchor="encoding-transport-capabilities-in-the-provider-synchronization-edns0-option"><name>Encoding Transport Capabilities in the Provider-Synchronization EDNS(0) Option</name>

<t>An Agent signals the union of its transport capabilities by setting the
corresponding bits to 1.</t>

<t>0: DNS transport supported (baseline, MUST be supported by all Agents)</t>

<t>1: API transport supported</t>

<t>2-7: unused</t>

</section>
<section anchor="encoding-multi-signer-synchronization-capabilities-in-the-provider-synchronization-edns0-option"><name>Encoding Multi-signer Synchronization Capabilities in the Provider-Synchronization EDNS(0) Option</name>

<t>In a multi-signer context, an Agent signals its multi-signer 
synchronization capabilities by setting the corresponding bits to 1.</t>

<t>0: Leader/Follower multi-signer synchronization supported</t>

<t>1: Peer-to-Peer multi-signer synchronization supported</t>

<t>2-7: unused</t>

<t>Detailed specification of the Multi-signer Sync field is out of scope for this document.</t>

</section>
</section>
</section>
<section anchor="sequence-diagram-example-of-establishing-secure-comms-the-hello-phase"><name>Sequence Diagram Example of Establishing Secure Comms - "The Hello Phase"</name>

<t>The procedure of locating another Agent and establishing a secure
communication, referred to as "The Hello Phase" is examplified in the
sequence diagram below.</t>

<t>The procedure is as follows:</t>

<t><list style="numbers">
  <t>The Agents receive a zone via zone transfer. By
analyzing the HSYNC RRset each Agent become aware of the identities
of the other Agents for the zone. I.e. each Agent knows which other
Agents it needs to communicate with.  Communication with each of
these, previously unknown, remote Agents is referred to as "NEEDED".</t>
  <t>Each Agent starts aquiring the information needed to establish secure
communications with any previously unknown Agents. Here we only
illustrate the baseline case where DNS-based communications is to
be used in the following phase. Once all needed information has
been collected the communication with this remote Agent is considered
to be "KNOWN".</t>
  <t>Once an Agent has received the required information (URI, SVCB and
KEY records in the baseline case) it sends a NOTIFY message with a
dedicated Provider-Synchronization OPT code with OPERATION="HELLO".
The sender uses this OPT field to signal its transport and synchronization
capabilities. Similarly, the responder signals its capabilities
using the same field.</t>
  <t>When an Agent either gets a NOERROR response to its NOTIFY OPT(hello)
message or responds with a NOERROR, it transitions out of "The
Hello Phase" with the exchanging party and they transition to the
next phaste where they start sending NOTIFY OPT(heartbeat) signals
instead. The communication with the remote Agent is now considered to
be in the "OPERATIONAL" state.</t>
</list></t>

<t>In the case where one Agent is aware of the need to communicate with
another Agent, but the other is not (eg. the zone transfer was delayed
for one of them), the slower one SHOULD respond with a RCODE=REFUSED
to any NOTIFY OPT(hello) it receives. Once it is ready, it will send
its own NOTIFY OPT(hello) which should be responded to with a
RCODE=NOERROR.</t>

<figure><artwork><![CDATA[
+----------+                 +----------+                        +----------+
|  Owner   |                 | Agent A  |                        | Agent B  |
+----------+                 +----------+                        +----------+
     |                            |                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |--------------------------->|                                    |
     |      AXFR(sign-me.se.)     |                                    |
     |---------------------------------------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  QUERY _dns._tcp.agent-b.se. URI?  |
     |                            |----------------------------------->|
     |                            |  QUERY ns.agent-b.se. SVCB?        |
     |                            |----------------------------------->|
     |                            |  QUERY ns.agent-b.se. KEY?         |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(hello)     |
     |                            |----------------------------------->|
     |                            |  NOERROR sign-me.se. OPT(hello)    |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |----------------------------------->|
     |                            |                                    |
     |                            |                                    |
     |                            |  NOTIFY sign-me.se. OPT(heartbeat) |
     |                            |<-----------------------------------|
     |                            |                                    |
     |                            |                                    |
     |                            |                                    |

]]></artwork></figure>

</section>
<section anchor="responsibilities-of-an-agent"><name>Responsibilities of an Agent</name>

<t>Each Agent has certain responsibilites, depending on supported
transports methods.</t>

<section anchor="enabling-remote-agents-to-locate-this-agent"><name>Enabling Remote Agents to Locate This Agent</name>

<t>For a group of Agents to be able to communicate securely and synchronize
data for a zone, each Agent must ensure that the DNS records needed for
secure communication with other Agents are published:</t>

<t><list style="symbols">
  <t>URI, SVCB and KEY records required for DNS-based communication
secured by SIG(0).</t>
  <t>URI, SVCB and TLSA records required for API-based communication
secured by TLS (if supported).</t>
  <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the identity of the Agent.</t>
</list></t>

</section>
<section anchor="enabling-remote-agents-to-lookup-zone-data-added-by-this-agent"><name>Enabling Remote Agents to Lookup Zone Data Added By This Agent</name>

<t>When using DNS transport between Agents, four types of information is
needed to be conveyed from one party to another:</t>

<t><list style="numbers">
  <t>Notifications (sent as DNS NOTIFY).</t>
  <t>Retrieval of existing data (looked up via DNS QUERY).</t>
  <t>Changes to existing data (sent as DNS UPDATE).</t>
</list></t>

<t>In addition there is also a need for the Agents to signal state information
to each other. One obvious case of this is in the multi-signer context, where
the Agents need to signal the state of an ongoing multi-signer process to each other:</t>

<t><list style="numbers">
  <t>Multi-signer "state" information (sent via the Provider-Synchronization EDNS(0)
OPT).</t>
</list></t>

<t>The second case, i.e. looking up data for a zone that is particular to
a specific DNS Provider is typically about the DNSKEY RRs added by
that signer or the NS RRs representing the authoritative nameservers
for that DNS Provider. This is looked up under domain names
constructed from the name of the served zone and the identity of the
DNS Provider.</t>

<t>For each zone that is managed, the Agent must ensure that the data
needed for synchronization with other Agents is published:</t>

<t><list style="symbols">
  <t>The DNSKEY RRset for the zone consisting of the DNSKEYs that the
local Signer for this DNS Provider uses to sign the zone.</t>
  <t>The CDS RRset for the zone, representing the KSK that the local
Signer uses to sign the zone (when needed).</t>
  <t>The NS RRs for the zone, consisting of the NS records of the
authoritative nameservers that this DNS Provider is responsible
for.</t>
  <t>All of the above MUST be published in a DNSSEC-signed zone under
the domain name that is the concatenation of the zone name and the
identity of the Agent. Example for the zone "zone.example" and the
Agent "agent.provider":</t>
</list></t>

<t>zone.example.agent.provider. IN DNSKEY ...
zone.example.agent.provider. IN RRSIG DNSKEY ...
zone.example.agent.provider. IN NS ...
zone.example.agent.provider. IN RRSIG NS ...</t>

</section>
</section>
<section anchor="migration-from-single-signer-to-multi-signer"><name>Migration from Single-Signer to Multi-Signer</name>

<t>The migration from a single-signer to a multi-signer architecture is
done by changing from only having a single designated signer in the
HSYNC RRset to having multiple designated signers (i.e. the SIGN field
changed from "NOSIGN" to "SIGN"). This may be done in several steps.</t>

<section anchor="adding-a-single-hsync-record-to-an-already-signed-zone"><name>Adding a single HSYNC record to an already signed zone</name>

<t>Adding a single HSYNC record to a zone that is already signed by the
DNS provider "provider.com" with NSMGMT=OWNER is a no-op that does not
change anything:</t>

<t>zone.example. IN HSYNC  ON  OWNER  SIGN  agent.provider.com. upstream.</t>

<t>The zone was already signed by the DNS provider "provider.com" and the
provider added any needed DNSSEC records, including DNSKEYs. The zone
NS RRset was managed by the zone owner. All of this is unchanged by
the addition of the HSYNC RRset.</t>

</section>
<section anchor="changing-the-hsync-nsmgmt-field-from-agent-to-owner"><name>Changing the HSYNC NSMGMT Field from AGENT To OWNER</name>

<t>Each Agent publishes the data it contributes to the zone under the
domain name {zone}.{identity}. I.e. the zone DNSKEYs that the Agent
agent.provider.com. uses are published as:</t>

<t>zone.example.agent.provider.com. DNSKEY ...
zone.example.agent.provider.com. DNSKEY ...</t>

<t>Likewise, the NS records for the zone are published as:</t>

<t>zone.example.ns.agent.provider.com. NS ...
zone.example.ns.agent.provider.com. NS ...</t>

<t>To migrate from "owner maintained" NS RRset to "Agent maintained", the
zone owner must verify that the NS RRset as published by the Agent is
correct and in sync with the NS RRset as published by the zone owner
itself.  After this verification the zone owner changes the HSYNC
NSMGMT field in the existing HSYNC records from NSMGMT=OWNER to
NSMGMT=AGENT.</t>

</section>
<section anchor="migrating-from-a-multi-signer-architecture-back-to-single-signer"><name>Migrating from a Multi-Signer Architecture Back to Single-Signer.</name>

<t>If, for some reason, a zone owner wants to migrate back to a
single-signer architecture (i.e. offboarding the second DNS Provider),
the process is essentially the reverse of the migration from
single-signer to multi-signer:</t>

<t><list style="numbers">
  <t>The zone owner offboards the second signing DNS Provider (only keeping
one signing DNS Provider).</t>
</list></t>

<t>When offboarding the second signing DNS Provider is signalled via the HSYNC RRset,
the multi-step process "remove signer" (as defined in <xref target="I-D.draft-ietf-dnsop-dnssec-automation"/>) is
initiated to remove the second DNS Provider from the zone in a series of
steps.</t>

<t>The zone is now essentially back to a single-signer architecture.
Once the offboarding is complete, the zone owner can remove the HSYNC
RRset designating the offboarded DNS Provider from the zone.</t>

<t>TO BE REMOVED BEFORE PUBLICATION:
# Rationale</t>

</section>
<section anchor="choice-of-the-hsync-mnemonic"><name>Choice of the HSYNC Mnemonic</name>

<t>Initially the mnemonic MSIGNER was used for the HSYNC RRset. However,
as work progressed it became clear that we want also non-signing DNS
Providers to be able to participate. So the RRset is a signalling
mehanism from zone owner to DNS Providers, some of which may or may
not be instructed to sign the zone. Therefore we suggest the mnemonic
HSYNC to indicate that this is a mechanism for "horizontal
synchronization" inside a zone.</t>

<t>But the mnemonic chosen is a very minor point and should a better
suggestion come up it would be great.</t>

</section>
<section anchor="separation-of-agent-and-combiner"><name>Separation of Agent and Combiner</name>

<t>It is possible to integrate all three multi-signer components (Signer,
Agent and Combiner) into a single piece of software (or two pieces,
depending on the preferred way of slicing the functionality). However,
such a composite module would be a fairly complex piece of software.
This document aims to describe the functional separation of the
different components rather than make a judgement on software design
alternatives.  Hence possible implementation choices are left to the
implementer.</t>

</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>An architecture for automated multi-provider zone management is a complex
system with a number of components.
The authors believe that the only way to make such an architecture
useful in practice is via automation. However, automation is a double-edged
sword. It can both make the system more robust and more vulnerable.</t>

<t>While all communication between Agents is authenticated (either via
SIG(0) signatures ore TLS), the signalling from the zone owner to the
Agents is via the HSYNC RRset in an unsigned zone. This is a potential
attack vector. However, securing zone transfers from zone owner to DNS
providers is a well-known issue with lots of existing solutions (TSIG,
zone transfer via a secure channel, zone transfer-over-TLS,
etc). Employing some of these solutions is strongly recommended.</t>

<t>From a vulnerability point-of-view this architecture introduces
several new components into the zone signing and publication
process. In particular the Combiner and the Agents are new components
that need to be secure. The Combiner has the advantage of not having
to announce its location to the outside world, as it only needs to
communicate with internal components (the zone owner, the Signer and
the Agent).</t>

<t>The Agent is more vulnerable. It needs to be discoverable by other
Agents and hence it is also discoverable by an adversary. On the
other hand, the Agents are not needed for a new zone to be signed and
published, they are only needed when there are changes that require
the Agents to synchronize, which is an infrequent event.</t>

<t>Furthermore, should an Agent be unable to fulfill its role during the
execution of a change requiring synchronization, whether it is a
complex multi-signer process or perhaps only a change to the NS RRset, the
synchronization process will simply stop where it is. Regardless of
where the stop (or rather pause) occurs, the zone will be fully functional.
Once the Agent is able to resume its role, the synchronization process
will continue from where it left off.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations.</name>

<t><strong>Note to the RFC Editor</strong>: In this section, please replace
occurrences of "(This document)" with a proper reference.</t>

<section anchor="hsync-rr-type"><name>HSYNC RR Type</name>

<t>IANA is requested to update the "Resource Record (RR) TYPEs" registry
under the "Domain Name System (DNS) Parameters" registry group as
follows:</t>

<dl>
  <dt>Type</dt>
  <dd>
    <t>HSYNC</t>
  </dd>
  <dt>Value</dt>
  <dd>
    <t>TBD</t>
  </dd>
  <dt>Meaning</dt>
  <dd>
    <t>Zone owner designation of DNS providers enabling mutual discovery</t>
  </dd>
  <dt>Reference</dt>
  <dd>
    <t>(This document)</t>
  </dd>
</dl>

</section>
<section anchor="new-provider-synchronization-edns-option"><name>New Provider-Synchronization EDNS Option</name>

<t>This document defines a new EDNS(0) option, entitled "Provider-Synchronization",
assigned a value of TBD "DNS EDNS0 Option Codes (OPT)" registry</t>

<t>TO BE REMOVED UPON PUBLICATION:
<eref target="foo">https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11</eref></t>

<figure><artwork><![CDATA[
   +-------+--------------------------+----------+----------------------+
   | Value | Name                     | Status   | Reference            |
   +-------+--------------------------+----------+----------------------+
   | TBD   | Provider-Synchronization | Standard | ( This document )    |
   +-------+--------------------------+----------+----------------------+
]]></artwork></figure>

</section>
<section anchor="a-new-registry-for-edns-option-provider-synchronization-operation-codes"><name>A New Registry for EDNS Option Provider-Synchronization Operation Codes</name>

<t>The Provider-Synchronization option also defines an 8-bit operation field, for
which IANA is requested to create and mainain a new registry entitled
"Provider-Synchronization Operations", used by the Provider-Synchronization option. Initial
values for the "Provider-Synchronization Operations" registry are given below;
future assignments in in the 3-127 range are to be made through
Specification Required review <xref target="BCP26"/>.</t>

<figure><artwork><![CDATA[
+-----------+---------------------------------------------+-------------------+
| OPERATION | Mnemonic                                    | Reference         |
+-----------+---------------------------------------------+-------------------+
| 0         | forbidden                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 1         | HELLO                                       | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 2         | HEARTBEAT                                   | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 3-127     | Unassigned                                  | ( This document ) |
+-----------+---------------------------------------------+-------------------+
| 128-255   | Private Use                                 | ( This document ) |
+-----------+---------------------------------------------+-------------------+
]]></artwork></figure>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC1996' target='https://www.rfc-editor.org/info/rfc1996'>
  <front>
    <title>A Mechanism for Prompt Notification of Zone Changes (DNS NOTIFY)</title>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='August' year='1996'/>
    <abstract>
      <t>This memo describes the NOTIFY opcode for DNS, by which a master server advises a set of slave servers that the master's data has been changed and that a query should be initiated to discover the new data. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1996'/>
  <seriesInfo name='DOI' value='10.17487/RFC1996'/>
</reference>

<reference anchor='RFC2136' target='https://www.rfc-editor.org/info/rfc2136'>
  <front>
    <title>Dynamic Updates in the Domain Name System (DNS UPDATE)</title>
    <author fullname='P. Vixie' initials='P.' role='editor' surname='Vixie'/>
    <author fullname='S. Thomson' initials='S.' surname='Thomson'/>
    <author fullname='Y. Rekhter' initials='Y.' surname='Rekhter'/>
    <author fullname='J. Bound' initials='J.' surname='Bound'/>
    <date month='April' year='1997'/>
    <abstract>
      <t>Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone. Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2136'/>
  <seriesInfo name='DOI' value='10.17487/RFC2136'/>
</reference>

<reference anchor='RFC3007' target='https://www.rfc-editor.org/info/rfc3007'>
  <front>
    <title>Secure Domain Name System (DNS) Dynamic Update</title>
    <author fullname='B. Wellington' initials='B.' surname='Wellington'/>
    <date month='November' year='2000'/>
    <abstract>
      <t>This document proposes a method for performing secure Domain Name System (DNS) dynamic updates. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='3007'/>
  <seriesInfo name='DOI' value='10.17487/RFC3007'/>
</reference>

<reference anchor='RFC2931' target='https://www.rfc-editor.org/info/rfc2931'>
  <front>
    <title>DNS Request and Transaction Signatures ( SIG(0)s )</title>
    <author fullname='D. Eastlake 3rd' initials='D.' surname='Eastlake 3rd'/>
    <date month='September' year='2000'/>
    <abstract>
      <t>This document describes the minor but non-interoperable changes in Request and Transaction signature resource records ( SIG(0)s ) that implementation experience has deemed necessary. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2931'/>
  <seriesInfo name='DOI' value='10.17487/RFC2931'/>
</reference>

<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC8901' target='https://www.rfc-editor.org/info/rfc8901'>
  <front>
    <title>Multi-Signer DNSSEC Models</title>
    <author fullname='S. Huque' initials='S.' surname='Huque'/>
    <author fullname='P. Aras' initials='P.' surname='Aras'/>
    <author fullname='J. Dickinson' initials='J.' surname='Dickinson'/>
    <author fullname='J. Vcelak' initials='J.' surname='Vcelak'/>
    <author fullname='D. Blacka' initials='D.' surname='Blacka'/>
    <date month='September' year='2020'/>
    <abstract>
      <t>Many enterprises today employ the service of multiple DNS providers to distribute their authoritative DNS service. Deploying DNSSEC in such an environment may present some challenges, depending on the configuration and feature set in use. In particular, when each DNS provider independently signs zone data with their own keys, additional key-management mechanisms are necessary. This document presents deployment models that accommodate this scenario and describes these key-management requirements. These models do not require any changes to the behavior of validating resolvers, nor do they impose the new key-management requirements on authoritative servers not involved in multi-signer configurations.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8901'/>
  <seriesInfo name='DOI' value='10.17487/RFC8901'/>
</reference>

<reference anchor='RFC6891' target='https://www.rfc-editor.org/info/rfc6891'>
  <front>
    <title>Extension Mechanisms for DNS (EDNS(0))</title>
    <author fullname='J. Damas' initials='J.' surname='Damas'/>
    <author fullname='M. Graff' initials='M.' surname='Graff'/>
    <author fullname='P. Vixie' initials='P.' surname='Vixie'/>
    <date month='April' year='2013'/>
    <abstract>
      <t>The Domain Name System's wire protocol includes a number of fixed fields whose range has been or soon will be exhausted and does not allow requestors to advertise their capabilities to responders. This document describes backward-compatible mechanisms for allowing the protocol to grow.</t>
      <t>This document updates the Extension Mechanisms for DNS (EDNS(0)) specification (and obsoletes RFC 2671) based on feedback from deployment experience in several implementations. It also obsoletes RFC 2673 ("Binary Labels in the Domain Name System") and adds considerations on the use of extended labels in the DNS.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='75'/>
  <seriesInfo name='RFC' value='6891'/>
  <seriesInfo name='DOI' value='10.17487/RFC6891'/>
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.draft-ietf-dnsop-dnssec-automation' target='https://datatracker.ietf.org/doc/html/draft-ietf-dnsop-dnssec-automation-03'>
   <front>
      <title>DNSSEC automation</title>
      <author fullname='Ulrich Wisser' initials='U.' surname='Wisser'>
         </author>
      <author fullname='Shumon Huque' initials='S.' surname='Huque'>
         <organization>Salesforce</organization>
      </author>
      <author fullname='Johan Stenstam' initials='J.' surname='Stenstam'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <date day='19' month='October' year='2024'/>
      <abstract>
	 <t>   This document describes an algorithm and protocol to automate the
   setup, operations, and decomissioning of Multi-Signer DNSSEC
   [RFC8901] configurations.  It employs Model 2 of the multi-signer
   specification, where each operator has their own distinct KSK and ZSK
   sets (or CSK sets), Managing DS Records from the Parent via CDS/
   CDNSKEY [RFC8078], and Child-to-Parent Synchronization in DNS
   [RFC7477] to accomplish this.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-dnsop-dnssec-automation-03'/>
   
</reference>


<reference anchor='I-D.draft-berra-dnsop-keystate' target='https://datatracker.ietf.org/doc/html/draft-berra-dnsop-keystate-01'>
   <front>
      <title>Signalling Key State Via DNS EDNS(0) OPT</title>
      <author fullname='Erik Bergström' initials='E.' surname='Bergström'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <author fullname='Leon Fernandez' initials='L.' surname='Fernandez'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <author fullname='Johan Stenstam' initials='J.' surname='Stenstam'>
         <organization>The Swedish Internet Foundation</organization>
      </author>
      <date day='7' month='February' year='2025'/>
      <abstract>
	 <t>   This document introduces the KeyState EDNS(0) option code, to enable
   the exchange of SIG(0) key state information between DNS entities via
   the DNS protocol.  The KeyState option allows DNS clients and servers
   to include key state data in both queries and responses, facilitating
   mutual awareness of SIG(0) key status between child and parent zones.
   This mechanism addresses the challenges of maintaining
   synchronization of SIG(0) keys used for securing DNS UPDATE messages,
   thereby enhancing the efficiency and reliability of DNS operations
   that require coordinated key management.

   This document proposes such a mechanism.

   TO BE REMOVED: This document is being collaborated on in Github at:
   https://github.com/johanix/draft-berra-dnsop-opt-transaction-state
   (https://github.com/johanix/draft-berra-dnsop-transaction-state-00).
   The most recent working version of the document, open issues, etc,
   should all be available there.  The authors (gratefully) accept pull
   requests.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-berra-dnsop-keystate-01'/>
   
</reference>

<referencegroup anchor='BCP26' target='https://www.rfc-editor.org/info/bcp26'>
  <reference anchor='RFC8126' target='https://www.rfc-editor.org/info/rfc8126'>
    <front>
      <title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
      <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
      <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
      <author fullname='T. Narten' initials='T.' surname='Narten'/>
      <date month='June' year='2017'/>
      <abstract>
        <t>Many protocols make use of points of extensibility that use constants to identify various protocol parameters. To ensure that the values in these fields do not have conflicting uses and to promote interoperability, their allocations are often coordinated by a central record keeper. For IETF protocols, that role is filled by the Internet Assigned Numbers Authority (IANA).</t>
        <t>To make assignments in a given registry prudently, guidance describing the conditions under which new values should be assigned, as well as when and how modifications to existing values can be made, is needed. This document defines a framework for the documentation of these guidelines by specification authors, in order to assure that the provided guidance for the IANA Considerations is clear and addresses the various issues that are likely in the operation of a registry.</t>
        <t>This is the third edition of this document; it obsoletes RFC 5226.</t>
      </abstract>
    </front>
    <seriesInfo name='BCP' value='26'/>
    <seriesInfo name='RFC' value='8126'/>
    <seriesInfo name='DOI' value='10.17487/RFC8126'/>
  </reference>
</referencegroup>




    </references>


<section anchor="change-history-to-be-removed-before-publication"><name>Change History (to be removed before publication)</name>

<t><list style="symbols">
  <t>This document is derived from the earlier document
draft-leon-dnsop-distributed-multi-signer-00</t>
</list></t>

<ul empty="true"><li>
  <t>Initial public draft.</t>
</li></ul>

</section>


  </back>

<!-- ##markdown-source:
H4sIANmexWcAA+1923Ybx7Xge31FDfxg0gIgkfJF5hwnhyIpi7FE6pBUPE5O
JqsBFMi2gG6c7gYp2FJWPuTM63zC/MD8Sb5k9rUujQZJOXJW1lnDFTkk0F21
a9eufd+7BoOBafJm5vZs7zy/LLJZXlzaP5SFs6c3havscdG4oumZbDSq3PVd
T03KcZHNYbBJlU2bwcyVxWBS1OViUOtrg5/gtUGJrw1yem3w6JGZZA289fPh
/sXRezOGPy7LarVn62ZiTL6o9mxTLetm99Gjrx/tmqxy2R7NWRWuMTdl9eay
KpeLPXt4cn76yn4PHyCA3+KH5o1bwROT8MLgEIEzpm6yYvLnbAbw7NmVq80i
37N/bMpx39Zl1VRuWsNvqzn+8idjsmVzVVZ7xg6MhZ+8qPfsi6F9BmPCOO4n
+pRX/wLW3fqirC6zIv8pa/Ky2LMXV86e37hJXl95sOyzcllM6AF6Ywx/NogE
fNDxZ26e5bM9i3gdTnX8f81lhLrJp42b1a4Y1i6B82hon7rqsm6q//t/5hGg
R1X+pv3NR4XUwQTDEU9Qzu8B6e+G9hyIAvYmhvN35VVWpF98VDB/xPGHtYx/
DzDPh/agKsdvXBVBCfBdu+TzFMijyaWbl2Vlz1ztsmqMoMIUzbJxKYCvi7xx
ExgPDkIdw1njDP9aX+XFm2VVDsfl3JiirOYwwbXbg6NSTKO/BoOBzUaA+WwM
5H5xldcWDuhyDmcOVgEbMlmOXW0zSychqyb5TzDr3I0BGXk9tzCWxdNq6bTW
tikNH2PbXLm8snx8beUu8V04cHD87KIqr/MJ8ITK1YuyqPNRPsubHOZpruA8
Xl4ZfCpvajebDu1xYydumhcERuFuaIizs2a1cH37/PyHkwO79byscgCjyWbm
fFWMYRRF6XYfBs0a64psNIMhUmBhZAK3cfbmKh9fGQUN5qqc5fNMS4Zna1fB
3gEaHsKi8TVZIw4JbGBcIr5m5ubKweeVDUPB4/BJNLWdZ0V2Set1llZTu6aP
Q9t64cb5dGXoYdiWooZDbAHdeYEzTPPLZUULq4e4X04wULkxMDCbzWblTZ0g
mZeZ1+PyGgZyGZBUSfDBbMbBto5meCJqN17CioFc5ssiH9MUOG1RAHH3rcvp
nes8o8Hnrq5xAYZfm9jRyp4ff7v1aNsyPuFDWje+kNmzo/OL6XJm918d2+iN
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
MYiNisGjR8b8xjfylVab9PrQ/D/yHmh2DNEAAA==

-->

</rfc>

